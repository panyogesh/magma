// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lte/protos/pipelined.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protos "magma/orc8r/lib/go/protos"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//8.2.26
type Action int32

const (
	Action_DROP Action = 0
	Action_FORW Action = 1
	//Below will be required in future use case
	Action_BUFF Action = 2
	Action_NOCP Action = 3
	Action_DUPL Action = 4
)

var Action_name = map[int32]string{
	0: "DROP",
	1: "FORW",
	2: "BUFF",
	3: "NOCP",
	4: "DUPL",
}

var Action_value = map[string]int32{
	"DROP": 0,
	"FORW": 1,
	"BUFF": 2,
	"NOCP": 3,
	"DUPL": 4,
}

func (x Action) String() string {
	return proto.EnumName(Action_name, int32(x))
}

func (Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{0}
}

type SourceInterfaceType int32

const (
	SourceInterfaceType_ACCESS SourceInterfaceType = 0
	SourceInterfaceType_CORE   SourceInterfaceType = 1
	SourceInterfaceType_SGiLAN SourceInterfaceType = 2
)

var SourceInterfaceType_name = map[int32]string{
	0: "ACCESS",
	1: "CORE",
	2: "SGiLAN",
}

var SourceInterfaceType_value = map[string]int32{
	"ACCESS": 0,
	"CORE":   1,
	"SGiLAN": 2,
}

func (x SourceInterfaceType) String() string {
	return proto.EnumName(SourceInterfaceType_name, int32(x))
}

func (SourceInterfaceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{1}
}

//pdr_state variable for SessionSet message per PDR.
type PdrState int32

const (
	PdrState_INSTALL PdrState = 0
	PdrState_REMOVE  PdrState = 1
	PdrState_IDLE    PdrState = 2
)

var PdrState_name = map[int32]string{
	0: "INSTALL",
	1: "REMOVE",
	2: "IDLE",
}

var PdrState_value = map[string]int32{
	"INSTALL": 0,
	"REMOVE":  1,
	"IDLE":    2,
}

func (x PdrState) String() string {
	return proto.EnumName(PdrState_name, int32(x))
}

func (PdrState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{2}
}

type SetupFlowsResult_Result int32

const (
	SetupFlowsResult_SUCCESS        SetupFlowsResult_Result = 0
	SetupFlowsResult_FAILURE        SetupFlowsResult_Result = 1
	SetupFlowsResult_OUTDATED_EPOCH SetupFlowsResult_Result = 2
)

var SetupFlowsResult_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
	2: "OUTDATED_EPOCH",
}

var SetupFlowsResult_Result_value = map[string]int32{
	"SUCCESS":        0,
	"FAILURE":        1,
	"OUTDATED_EPOCH": 2,
}

func (x SetupFlowsResult_Result) String() string {
	return proto.EnumName(SetupFlowsResult_Result_name, int32(x))
}

func (SetupFlowsResult_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{5, 0}
}

type RequestOriginType_OriginType int32

const (
	RequestOriginType_GX RequestOriginType_OriginType = 0
	RequestOriginType_GY RequestOriginType_OriginType = 1
	RequestOriginType_N4 RequestOriginType_OriginType = 2
)

var RequestOriginType_OriginType_name = map[int32]string{
	0: "GX",
	1: "GY",
	2: "N4",
}

var RequestOriginType_OriginType_value = map[string]int32{
	"GX": 0,
	"GY": 1,
	"N4": 2,
}

func (x RequestOriginType_OriginType) String() string {
	return proto.EnumName(RequestOriginType_OriginType_name, int32(x))
}

func (RequestOriginType_OriginType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{6, 0}
}

type RuleModResult_Result int32

const (
	RuleModResult_SUCCESS         RuleModResult_Result = 0
	RuleModResult_PARTIAL_SUCCESS RuleModResult_Result = 1
	RuleModResult_FAILURE         RuleModResult_Result = 2
)

var RuleModResult_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "PARTIAL_SUCCESS",
	2: "FAILURE",
}

var RuleModResult_Result_value = map[string]int32{
	"SUCCESS":         0,
	"PARTIAL_SUCCESS": 1,
	"FAILURE":         2,
}

func (x RuleModResult_Result) String() string {
	return proto.EnumName(RuleModResult_Result_name, int32(x))
}

func (RuleModResult_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{9, 0}
}

type DeactivateFlowsResult_Result int32

const (
	DeactivateFlowsResult_SUCCESS        DeactivateFlowsResult_Result = 0
	DeactivateFlowsResult_FAILURE        DeactivateFlowsResult_Result = 1
	DeactivateFlowsResult_OUTDATED_EPOCH DeactivateFlowsResult_Result = 2
)

var DeactivateFlowsResult_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
	2: "OUTDATED_EPOCH",
}

var DeactivateFlowsResult_Result_value = map[string]int32{
	"SUCCESS":        0,
	"FAILURE":        1,
	"OUTDATED_EPOCH": 2,
}

func (x DeactivateFlowsResult_Result) String() string {
	return proto.EnumName(DeactivateFlowsResult_Result_name, int32(x))
}

func (DeactivateFlowsResult_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{11, 0}
}

type FlowRequest_FlowState int32

const (
	FlowRequest_FLOW_CREATED                FlowRequest_FlowState = 0
	FlowRequest_FLOW_PARTIAL_CLASSIFICATION FlowRequest_FlowState = 1
	FlowRequest_FLOW_FINAL_CLASSIFICATION   FlowRequest_FlowState = 2
	FlowRequest_FLOW_EXPIRED                FlowRequest_FlowState = 3
)

var FlowRequest_FlowState_name = map[int32]string{
	0: "FLOW_CREATED",
	1: "FLOW_PARTIAL_CLASSIFICATION",
	2: "FLOW_FINAL_CLASSIFICATION",
	3: "FLOW_EXPIRED",
}

var FlowRequest_FlowState_value = map[string]int32{
	"FLOW_CREATED":                0,
	"FLOW_PARTIAL_CLASSIFICATION": 1,
	"FLOW_FINAL_CLASSIFICATION":   2,
	"FLOW_EXPIRED":                3,
}

func (x FlowRequest_FlowState) String() string {
	return proto.EnumName(FlowRequest_FlowState_name, int32(x))
}

func (FlowRequest_FlowState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{12, 0}
}

type FlowResponse_Result int32

const (
	FlowResponse_SUCCESS        FlowResponse_Result = 0
	FlowResponse_FAILURE        FlowResponse_Result = 1
	FlowResponse_OUTDATED_EPOCH FlowResponse_Result = 2
)

var FlowResponse_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
	2: "OUTDATED_EPOCH",
}

var FlowResponse_Result_value = map[string]int32{
	"SUCCESS":        0,
	"FAILURE":        1,
	"OUTDATED_EPOCH": 2,
}

func (x FlowResponse_Result) String() string {
	return proto.EnumName(FlowResponse_Result_name, int32(x))
}

func (FlowResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{13, 0}
}

type SubscriberQuotaUpdate_Type int32

const (
	SubscriberQuotaUpdate_VALID_QUOTA SubscriberQuotaUpdate_Type = 0
	SubscriberQuotaUpdate_NO_QUOTA    SubscriberQuotaUpdate_Type = 1
	SubscriberQuotaUpdate_TERMINATE   SubscriberQuotaUpdate_Type = 2
)

var SubscriberQuotaUpdate_Type_name = map[int32]string{
	0: "VALID_QUOTA",
	1: "NO_QUOTA",
	2: "TERMINATE",
}

var SubscriberQuotaUpdate_Type_value = map[string]int32{
	"VALID_QUOTA": 0,
	"NO_QUOTA":    1,
	"TERMINATE":   2,
}

func (x SubscriberQuotaUpdate_Type) String() string {
	return proto.EnumName(SubscriberQuotaUpdate_Type_name, int32(x))
}

func (SubscriberQuotaUpdate_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{15, 0}
}

type FsmState_FsmState int32

const (
	FsmState_SESSION_ACTIVE                FsmState_FsmState = 0
	FsmState_SESSION_TERMINATED            FsmState_FsmState = 4
	FsmState_SESSION_TERMINATION_SCHEDULED FsmState_FsmState = 5
	FsmState_SESSION_RELEASED              FsmState_FsmState = 6
	FsmState_CREATING                      FsmState_FsmState = 7
	FsmState_CREATED                       FsmState_FsmState = 8
	FsmState_ACTIVE                        FsmState_FsmState = 9
	FsmState_INACTIVE                      FsmState_FsmState = 10
	FsmState_RELEASE                       FsmState_FsmState = 11
)

var FsmState_FsmState_name = map[int32]string{
	0:  "SESSION_ACTIVE",
	4:  "SESSION_TERMINATED",
	5:  "SESSION_TERMINATION_SCHEDULED",
	6:  "SESSION_RELEASED",
	7:  "CREATING",
	8:  "CREATED",
	9:  "ACTIVE",
	10: "INACTIVE",
	11: "RELEASE",
}

var FsmState_FsmState_value = map[string]int32{
	"SESSION_ACTIVE":                0,
	"SESSION_TERMINATED":            4,
	"SESSION_TERMINATION_SCHEDULED": 5,
	"SESSION_RELEASED":              6,
	"CREATING":                      7,
	"CREATED":                       8,
	"ACTIVE":                        9,
	"INACTIVE":                      10,
	"RELEASE":                       11,
}

func (x FsmState_FsmState) String() string {
	return proto.EnumName(FsmState_FsmState_name, int32(x))
}

func (FsmState_FsmState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{21, 0}
}

type RedirectInfo_RedirectAddrType int32

const (
	RedirectInfo_IPV4   RedirectInfo_RedirectAddrType = 0
	RedirectInfo_IPV6   RedirectInfo_RedirectAddrType = 1
	RedirectInfo_URL    RedirectInfo_RedirectAddrType = 2
	RedirectInfo_SIPURI RedirectInfo_RedirectAddrType = 3
	RedirectInfo_IPV4V6 RedirectInfo_RedirectAddrType = 4
)

var RedirectInfo_RedirectAddrType_name = map[int32]string{
	0: "IPV4",
	1: "IPV6",
	2: "URL",
	3: "SIPURI",
	4: "IPV4V6",
}

var RedirectInfo_RedirectAddrType_value = map[string]int32{
	"IPV4":   0,
	"IPV6":   1,
	"URL":    2,
	"SIPURI": 3,
	"IPV4V6": 4,
}

func (x RedirectInfo_RedirectAddrType) String() string {
	return proto.EnumName(RedirectInfo_RedirectAddrType_name, int32(x))
}

func (RedirectInfo_RedirectAddrType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{26, 0}
}

//15.8, Table 8.2.1-1
type CauseIE_CauseValues int32

const (
	CauseIE_RESERVED                              CauseIE_CauseValues = 0
	CauseIE_REQUEST_ACCEPTED                      CauseIE_CauseValues = 1
	CauseIE_REQUEST_REJECTED_NO_REASON            CauseIE_CauseValues = 2
	CauseIE_SESSION_CONTEXT_NOT_FOUND             CauseIE_CauseValues = 3
	CauseIE_MANDATORY_IE_MISSING                  CauseIE_CauseValues = 4
	CauseIE_CONDITIONAL_IE_MISSING                CauseIE_CauseValues = 5
	CauseIE_INVALID_LENGTH                        CauseIE_CauseValues = 6
	CauseIE_MANDATORY_IE_INCORRECT                CauseIE_CauseValues = 7
	CauseIE_INVALID_FORWARDING_POLICY             CauseIE_CauseValues = 8
	CauseIE_INVALID_F_TEID_ALLOCATION_OPTION      CauseIE_CauseValues = 9
	CauseIE_NO_ESTABLISHED_PFCP_ASSOCIATION       CauseIE_CauseValues = 10
	CauseIE_RULE_CREATION_OR_MODIFICATION_FAILURE CauseIE_CauseValues = 11
	CauseIE_PFCP_ENTRY_IN_CONGESTION              CauseIE_CauseValues = 12
	CauseIE_NO_RESOURCES_AVAILABLE                CauseIE_CauseValues = 13
	CauseIE_SERVICE_NOT_SUPPORTED                 CauseIE_CauseValues = 14
	CauseIE_SYSTEM_FAILURE                        CauseIE_CauseValues = 15
)

var CauseIE_CauseValues_name = map[int32]string{
	0:  "RESERVED",
	1:  "REQUEST_ACCEPTED",
	2:  "REQUEST_REJECTED_NO_REASON",
	3:  "SESSION_CONTEXT_NOT_FOUND",
	4:  "MANDATORY_IE_MISSING",
	5:  "CONDITIONAL_IE_MISSING",
	6:  "INVALID_LENGTH",
	7:  "MANDATORY_IE_INCORRECT",
	8:  "INVALID_FORWARDING_POLICY",
	9:  "INVALID_F_TEID_ALLOCATION_OPTION",
	10: "NO_ESTABLISHED_PFCP_ASSOCIATION",
	11: "RULE_CREATION_OR_MODIFICATION_FAILURE",
	12: "PFCP_ENTRY_IN_CONGESTION",
	13: "NO_RESOURCES_AVAILABLE",
	14: "SERVICE_NOT_SUPPORTED",
	15: "SYSTEM_FAILURE",
}

var CauseIE_CauseValues_value = map[string]int32{
	"RESERVED":                              0,
	"REQUEST_ACCEPTED":                      1,
	"REQUEST_REJECTED_NO_REASON":            2,
	"SESSION_CONTEXT_NOT_FOUND":             3,
	"MANDATORY_IE_MISSING":                  4,
	"CONDITIONAL_IE_MISSING":                5,
	"INVALID_LENGTH":                        6,
	"MANDATORY_IE_INCORRECT":                7,
	"INVALID_FORWARDING_POLICY":             8,
	"INVALID_F_TEID_ALLOCATION_OPTION":      9,
	"NO_ESTABLISHED_PFCP_ASSOCIATION":       10,
	"RULE_CREATION_OR_MODIFICATION_FAILURE": 11,
	"PFCP_ENTRY_IN_CONGESTION":              12,
	"NO_RESOURCES_AVAILABLE":                13,
	"SERVICE_NOT_SUPPORTED":                 14,
	"SYSTEM_FAILURE":                        15,
}

func (x CauseIE_CauseValues) String() string {
	return proto.EnumName(CauseIE_CauseValues_name, int32(x))
}

func (CauseIE_CauseValues) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{35, 0}
}

// Deprecated
type SetupFlowsRequest struct {
	// List of requests to activate
	Requests []*ActivateFlowsRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	// epoch to prevent outdated setup calls
	Epoch uint64 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// List of subscriber quota updates
	QuotaUpdates         *UpdateSubscriberQuotaStateRequest `protobuf:"bytes,3,opt,name=quota_updates,json=quotaUpdates,proto3" json:"quota_updates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *SetupFlowsRequest) Reset()         { *m = SetupFlowsRequest{} }
func (m *SetupFlowsRequest) String() string { return proto.CompactTextString(m) }
func (*SetupFlowsRequest) ProtoMessage()    {}
func (*SetupFlowsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{0}
}

func (m *SetupFlowsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupFlowsRequest.Unmarshal(m, b)
}
func (m *SetupFlowsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupFlowsRequest.Marshal(b, m, deterministic)
}
func (m *SetupFlowsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupFlowsRequest.Merge(m, src)
}
func (m *SetupFlowsRequest) XXX_Size() int {
	return xxx_messageInfo_SetupFlowsRequest.Size(m)
}
func (m *SetupFlowsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupFlowsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetupFlowsRequest proto.InternalMessageInfo

func (m *SetupFlowsRequest) GetRequests() []*ActivateFlowsRequest {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *SetupFlowsRequest) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *SetupFlowsRequest) GetQuotaUpdates() *UpdateSubscriberQuotaStateRequest {
	if m != nil {
		return m.QuotaUpdates
	}
	return nil
}

type SetupDefaultRequest struct {
	// epoch to prevent outdated setup calls
	Epoch                uint64   `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetupDefaultRequest) Reset()         { *m = SetupDefaultRequest{} }
func (m *SetupDefaultRequest) String() string { return proto.CompactTextString(m) }
func (*SetupDefaultRequest) ProtoMessage()    {}
func (*SetupDefaultRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{1}
}

func (m *SetupDefaultRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupDefaultRequest.Unmarshal(m, b)
}
func (m *SetupDefaultRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupDefaultRequest.Marshal(b, m, deterministic)
}
func (m *SetupDefaultRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupDefaultRequest.Merge(m, src)
}
func (m *SetupDefaultRequest) XXX_Size() int {
	return xxx_messageInfo_SetupDefaultRequest.Size(m)
}
func (m *SetupDefaultRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupDefaultRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetupDefaultRequest proto.InternalMessageInfo

func (m *SetupDefaultRequest) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

type SetupUEMacRequest struct {
	// List of UEs to activate
	Requests []*UEMacFlowRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	// epoch to prevent outdated setup calls
	Epoch                uint64   `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetupUEMacRequest) Reset()         { *m = SetupUEMacRequest{} }
func (m *SetupUEMacRequest) String() string { return proto.CompactTextString(m) }
func (*SetupUEMacRequest) ProtoMessage()    {}
func (*SetupUEMacRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{2}
}

func (m *SetupUEMacRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupUEMacRequest.Unmarshal(m, b)
}
func (m *SetupUEMacRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupUEMacRequest.Marshal(b, m, deterministic)
}
func (m *SetupUEMacRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupUEMacRequest.Merge(m, src)
}
func (m *SetupUEMacRequest) XXX_Size() int {
	return xxx_messageInfo_SetupUEMacRequest.Size(m)
}
func (m *SetupUEMacRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupUEMacRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetupUEMacRequest proto.InternalMessageInfo

func (m *SetupUEMacRequest) GetRequests() []*UEMacFlowRequest {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *SetupUEMacRequest) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

type SetupPolicyRequest struct {
	// List of requests to activate
	Requests []*ActivateFlowsRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	// epoch to prevent outdated setup calls
	Epoch                uint64   `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetupPolicyRequest) Reset()         { *m = SetupPolicyRequest{} }
func (m *SetupPolicyRequest) String() string { return proto.CompactTextString(m) }
func (*SetupPolicyRequest) ProtoMessage()    {}
func (*SetupPolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{3}
}

func (m *SetupPolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupPolicyRequest.Unmarshal(m, b)
}
func (m *SetupPolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupPolicyRequest.Marshal(b, m, deterministic)
}
func (m *SetupPolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupPolicyRequest.Merge(m, src)
}
func (m *SetupPolicyRequest) XXX_Size() int {
	return xxx_messageInfo_SetupPolicyRequest.Size(m)
}
func (m *SetupPolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupPolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetupPolicyRequest proto.InternalMessageInfo

func (m *SetupPolicyRequest) GetRequests() []*ActivateFlowsRequest {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *SetupPolicyRequest) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

type SetupQuotaRequest struct {
	// List of quota rules to activate
	QuotaUpdates *UpdateSubscriberQuotaStateRequest `protobuf:"bytes,1,opt,name=quota_updates,json=quotaUpdates,proto3" json:"quota_updates,omitempty"`
	// epoch to prevent outdated setup calls
	Epoch                uint64   `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetupQuotaRequest) Reset()         { *m = SetupQuotaRequest{} }
func (m *SetupQuotaRequest) String() string { return proto.CompactTextString(m) }
func (*SetupQuotaRequest) ProtoMessage()    {}
func (*SetupQuotaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{4}
}

func (m *SetupQuotaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupQuotaRequest.Unmarshal(m, b)
}
func (m *SetupQuotaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupQuotaRequest.Marshal(b, m, deterministic)
}
func (m *SetupQuotaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupQuotaRequest.Merge(m, src)
}
func (m *SetupQuotaRequest) XXX_Size() int {
	return xxx_messageInfo_SetupQuotaRequest.Size(m)
}
func (m *SetupQuotaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupQuotaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetupQuotaRequest proto.InternalMessageInfo

func (m *SetupQuotaRequest) GetQuotaUpdates() *UpdateSubscriberQuotaStateRequest {
	if m != nil {
		return m.QuotaUpdates
	}
	return nil
}

func (m *SetupQuotaRequest) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

type SetupFlowsResult struct {
	Result               SetupFlowsResult_Result `protobuf:"varint,1,opt,name=result,proto3,enum=magma.lte.SetupFlowsResult_Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SetupFlowsResult) Reset()         { *m = SetupFlowsResult{} }
func (m *SetupFlowsResult) String() string { return proto.CompactTextString(m) }
func (*SetupFlowsResult) ProtoMessage()    {}
func (*SetupFlowsResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{5}
}

func (m *SetupFlowsResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupFlowsResult.Unmarshal(m, b)
}
func (m *SetupFlowsResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupFlowsResult.Marshal(b, m, deterministic)
}
func (m *SetupFlowsResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupFlowsResult.Merge(m, src)
}
func (m *SetupFlowsResult) XXX_Size() int {
	return xxx_messageInfo_SetupFlowsResult.Size(m)
}
func (m *SetupFlowsResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupFlowsResult.DiscardUnknown(m)
}

var xxx_messageInfo_SetupFlowsResult proto.InternalMessageInfo

func (m *SetupFlowsResult) GetResult() SetupFlowsResult_Result {
	if m != nil {
		return m.Result
	}
	return SetupFlowsResult_SUCCESS
}

type RequestOriginType struct {
	Type                 RequestOriginType_OriginType `protobuf:"varint,1,opt,name=type,proto3,enum=magma.lte.RequestOriginType_OriginType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *RequestOriginType) Reset()         { *m = RequestOriginType{} }
func (m *RequestOriginType) String() string { return proto.CompactTextString(m) }
func (*RequestOriginType) ProtoMessage()    {}
func (*RequestOriginType) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{6}
}

func (m *RequestOriginType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestOriginType.Unmarshal(m, b)
}
func (m *RequestOriginType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestOriginType.Marshal(b, m, deterministic)
}
func (m *RequestOriginType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestOriginType.Merge(m, src)
}
func (m *RequestOriginType) XXX_Size() int {
	return xxx_messageInfo_RequestOriginType.Size(m)
}
func (m *RequestOriginType) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestOriginType.DiscardUnknown(m)
}

var xxx_messageInfo_RequestOriginType proto.InternalMessageInfo

func (m *RequestOriginType) GetType() RequestOriginType_OriginType {
	if m != nil {
		return m.Type
	}
	return RequestOriginType_GX
}

type ActivateFlowsRequest struct {
	Sid                  *SubscriberID             `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	IpAddr               string                    `protobuf:"bytes,2,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	RuleIds              []string                  `protobuf:"bytes,3,rep,name=rule_ids,json=ruleIds,proto3" json:"rule_ids,omitempty"`
	DynamicRules         []*PolicyRule             `protobuf:"bytes,4,rep,name=dynamic_rules,json=dynamicRules,proto3" json:"dynamic_rules,omitempty"`
	RequestOrigin        *RequestOriginType        `protobuf:"bytes,5,opt,name=request_origin,json=requestOrigin,proto3" json:"request_origin,omitempty"`
	ApnAmbr              *AggregatedMaximumBitrate `protobuf:"bytes,6,opt,name=apn_ambr,json=apnAmbr,proto3" json:"apn_ambr,omitempty"`
	Ipv6Addr             []byte                    `protobuf:"bytes,7,opt,name=ipv6_addr,json=ipv6Addr,proto3" json:"ipv6_addr,omitempty"`
	Msisdn               []byte                    `protobuf:"bytes,8,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	UplinkTunnel         uint32                    `protobuf:"varint,9,opt,name=uplink_tunnel,json=uplinkTunnel,proto3" json:"uplink_tunnel,omitempty"`
	DownlinkTunnel       uint32                    `protobuf:"varint,10,opt,name=downlink_tunnel,json=downlinkTunnel,proto3" json:"downlink_tunnel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ActivateFlowsRequest) Reset()         { *m = ActivateFlowsRequest{} }
func (m *ActivateFlowsRequest) String() string { return proto.CompactTextString(m) }
func (*ActivateFlowsRequest) ProtoMessage()    {}
func (*ActivateFlowsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{7}
}

func (m *ActivateFlowsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateFlowsRequest.Unmarshal(m, b)
}
func (m *ActivateFlowsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateFlowsRequest.Marshal(b, m, deterministic)
}
func (m *ActivateFlowsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateFlowsRequest.Merge(m, src)
}
func (m *ActivateFlowsRequest) XXX_Size() int {
	return xxx_messageInfo_ActivateFlowsRequest.Size(m)
}
func (m *ActivateFlowsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateFlowsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateFlowsRequest proto.InternalMessageInfo

func (m *ActivateFlowsRequest) GetSid() *SubscriberID {
	if m != nil {
		return m.Sid
	}
	return nil
}

func (m *ActivateFlowsRequest) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *ActivateFlowsRequest) GetRuleIds() []string {
	if m != nil {
		return m.RuleIds
	}
	return nil
}

func (m *ActivateFlowsRequest) GetDynamicRules() []*PolicyRule {
	if m != nil {
		return m.DynamicRules
	}
	return nil
}

func (m *ActivateFlowsRequest) GetRequestOrigin() *RequestOriginType {
	if m != nil {
		return m.RequestOrigin
	}
	return nil
}

func (m *ActivateFlowsRequest) GetApnAmbr() *AggregatedMaximumBitrate {
	if m != nil {
		return m.ApnAmbr
	}
	return nil
}

func (m *ActivateFlowsRequest) GetIpv6Addr() []byte {
	if m != nil {
		return m.Ipv6Addr
	}
	return nil
}

func (m *ActivateFlowsRequest) GetMsisdn() []byte {
	if m != nil {
		return m.Msisdn
	}
	return nil
}

func (m *ActivateFlowsRequest) GetUplinkTunnel() uint32 {
	if m != nil {
		return m.UplinkTunnel
	}
	return 0
}

func (m *ActivateFlowsRequest) GetDownlinkTunnel() uint32 {
	if m != nil {
		return m.DownlinkTunnel
	}
	return 0
}

// DeactivateFlowsRequest can be used to deactivate all flows for a subscriber,
// all flows for some rules, or particular rules for a subscriber, depending on
// which parameters are passed. Rule IDs can apply to static rules or dynamic
// rules
// If no rule ids are given, all flows are deactivated
type DeactivateFlowsRequest struct {
	Sid                    *SubscriberID      `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	RuleIds                []string           `protobuf:"bytes,2,rep,name=rule_ids,json=ruleIds,proto3" json:"rule_ids,omitempty"`
	RequestOrigin          *RequestOriginType `protobuf:"bytes,3,opt,name=request_origin,json=requestOrigin,proto3" json:"request_origin,omitempty"`
	IpAddr                 string             `protobuf:"bytes,4,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	Ipv6Addr               []byte             `protobuf:"bytes,5,opt,name=ipv6_addr,json=ipv6Addr,proto3" json:"ipv6_addr,omitempty"`
	RemoveDefaultDropFlows bool               `protobuf:"varint,6,opt,name=remove_default_drop_flows,json=removeDefaultDropFlows,proto3" json:"remove_default_drop_flows,omitempty"`
	UplinkTunnel           uint32             `protobuf:"varint,7,opt,name=uplink_tunnel,json=uplinkTunnel,proto3" json:"uplink_tunnel,omitempty"`
	DownlinkTunnel         uint32             `protobuf:"varint,8,opt,name=downlink_tunnel,json=downlinkTunnel,proto3" json:"downlink_tunnel,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}           `json:"-"`
	XXX_unrecognized       []byte             `json:"-"`
	XXX_sizecache          int32              `json:"-"`
}

func (m *DeactivateFlowsRequest) Reset()         { *m = DeactivateFlowsRequest{} }
func (m *DeactivateFlowsRequest) String() string { return proto.CompactTextString(m) }
func (*DeactivateFlowsRequest) ProtoMessage()    {}
func (*DeactivateFlowsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{8}
}

func (m *DeactivateFlowsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeactivateFlowsRequest.Unmarshal(m, b)
}
func (m *DeactivateFlowsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeactivateFlowsRequest.Marshal(b, m, deterministic)
}
func (m *DeactivateFlowsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeactivateFlowsRequest.Merge(m, src)
}
func (m *DeactivateFlowsRequest) XXX_Size() int {
	return xxx_messageInfo_DeactivateFlowsRequest.Size(m)
}
func (m *DeactivateFlowsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeactivateFlowsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeactivateFlowsRequest proto.InternalMessageInfo

func (m *DeactivateFlowsRequest) GetSid() *SubscriberID {
	if m != nil {
		return m.Sid
	}
	return nil
}

func (m *DeactivateFlowsRequest) GetRuleIds() []string {
	if m != nil {
		return m.RuleIds
	}
	return nil
}

func (m *DeactivateFlowsRequest) GetRequestOrigin() *RequestOriginType {
	if m != nil {
		return m.RequestOrigin
	}
	return nil
}

func (m *DeactivateFlowsRequest) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *DeactivateFlowsRequest) GetIpv6Addr() []byte {
	if m != nil {
		return m.Ipv6Addr
	}
	return nil
}

func (m *DeactivateFlowsRequest) GetRemoveDefaultDropFlows() bool {
	if m != nil {
		return m.RemoveDefaultDropFlows
	}
	return false
}

func (m *DeactivateFlowsRequest) GetUplinkTunnel() uint32 {
	if m != nil {
		return m.UplinkTunnel
	}
	return 0
}

func (m *DeactivateFlowsRequest) GetDownlinkTunnel() uint32 {
	if m != nil {
		return m.DownlinkTunnel
	}
	return 0
}

type RuleModResult struct {
	RuleId               string               `protobuf:"bytes,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Result               RuleModResult_Result `protobuf:"varint,2,opt,name=result,proto3,enum=magma.lte.RuleModResult_Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RuleModResult) Reset()         { *m = RuleModResult{} }
func (m *RuleModResult) String() string { return proto.CompactTextString(m) }
func (*RuleModResult) ProtoMessage()    {}
func (*RuleModResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{9}
}

func (m *RuleModResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleModResult.Unmarshal(m, b)
}
func (m *RuleModResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleModResult.Marshal(b, m, deterministic)
}
func (m *RuleModResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleModResult.Merge(m, src)
}
func (m *RuleModResult) XXX_Size() int {
	return xxx_messageInfo_RuleModResult.Size(m)
}
func (m *RuleModResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleModResult.DiscardUnknown(m)
}

var xxx_messageInfo_RuleModResult proto.InternalMessageInfo

func (m *RuleModResult) GetRuleId() string {
	if m != nil {
		return m.RuleId
	}
	return ""
}

func (m *RuleModResult) GetResult() RuleModResult_Result {
	if m != nil {
		return m.Result
	}
	return RuleModResult_SUCCESS
}

type ActivateFlowsResult struct {
	StaticRuleResults    []*RuleModResult `protobuf:"bytes,1,rep,name=static_rule_results,json=staticRuleResults,proto3" json:"static_rule_results,omitempty"`
	DynamicRuleResults   []*RuleModResult `protobuf:"bytes,2,rep,name=dynamic_rule_results,json=dynamicRuleResults,proto3" json:"dynamic_rule_results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ActivateFlowsResult) Reset()         { *m = ActivateFlowsResult{} }
func (m *ActivateFlowsResult) String() string { return proto.CompactTextString(m) }
func (*ActivateFlowsResult) ProtoMessage()    {}
func (*ActivateFlowsResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{10}
}

func (m *ActivateFlowsResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateFlowsResult.Unmarshal(m, b)
}
func (m *ActivateFlowsResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateFlowsResult.Marshal(b, m, deterministic)
}
func (m *ActivateFlowsResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateFlowsResult.Merge(m, src)
}
func (m *ActivateFlowsResult) XXX_Size() int {
	return xxx_messageInfo_ActivateFlowsResult.Size(m)
}
func (m *ActivateFlowsResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateFlowsResult.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateFlowsResult proto.InternalMessageInfo

func (m *ActivateFlowsResult) GetStaticRuleResults() []*RuleModResult {
	if m != nil {
		return m.StaticRuleResults
	}
	return nil
}

func (m *ActivateFlowsResult) GetDynamicRuleResults() []*RuleModResult {
	if m != nil {
		return m.DynamicRuleResults
	}
	return nil
}

type DeactivateFlowsResult struct {
	Result               DeactivateFlowsResult_Result `protobuf:"varint,1,opt,name=result,proto3,enum=magma.lte.DeactivateFlowsResult_Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *DeactivateFlowsResult) Reset()         { *m = DeactivateFlowsResult{} }
func (m *DeactivateFlowsResult) String() string { return proto.CompactTextString(m) }
func (*DeactivateFlowsResult) ProtoMessage()    {}
func (*DeactivateFlowsResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{11}
}

func (m *DeactivateFlowsResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeactivateFlowsResult.Unmarshal(m, b)
}
func (m *DeactivateFlowsResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeactivateFlowsResult.Marshal(b, m, deterministic)
}
func (m *DeactivateFlowsResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeactivateFlowsResult.Merge(m, src)
}
func (m *DeactivateFlowsResult) XXX_Size() int {
	return xxx_messageInfo_DeactivateFlowsResult.Size(m)
}
func (m *DeactivateFlowsResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DeactivateFlowsResult.DiscardUnknown(m)
}

var xxx_messageInfo_DeactivateFlowsResult proto.InternalMessageInfo

func (m *DeactivateFlowsResult) GetResult() DeactivateFlowsResult_Result {
	if m != nil {
		return m.Result
	}
	return DeactivateFlowsResult_SUCCESS
}

type FlowRequest struct {
	Match                *FlowMatch            `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	AppName              string                `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	BytesRx              uint64                `protobuf:"varint,3,opt,name=bytes_rx,json=bytesRx,proto3" json:"bytes_rx,omitempty"`
	ServiceType          string                `protobuf:"bytes,4,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	SrcMac               string                `protobuf:"bytes,5,opt,name=src_mac,json=srcMac,proto3" json:"src_mac,omitempty"`
	DstMac               string                `protobuf:"bytes,6,opt,name=dst_mac,json=dstMac,proto3" json:"dst_mac,omitempty"`
	State                FlowRequest_FlowState `protobuf:"varint,7,opt,name=state,proto3,enum=magma.lte.FlowRequest_FlowState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FlowRequest) Reset()         { *m = FlowRequest{} }
func (m *FlowRequest) String() string { return proto.CompactTextString(m) }
func (*FlowRequest) ProtoMessage()    {}
func (*FlowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{12}
}

func (m *FlowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowRequest.Unmarshal(m, b)
}
func (m *FlowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowRequest.Marshal(b, m, deterministic)
}
func (m *FlowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowRequest.Merge(m, src)
}
func (m *FlowRequest) XXX_Size() int {
	return xxx_messageInfo_FlowRequest.Size(m)
}
func (m *FlowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FlowRequest proto.InternalMessageInfo

func (m *FlowRequest) GetMatch() *FlowMatch {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *FlowRequest) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *FlowRequest) GetBytesRx() uint64 {
	if m != nil {
		return m.BytesRx
	}
	return 0
}

func (m *FlowRequest) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *FlowRequest) GetSrcMac() string {
	if m != nil {
		return m.SrcMac
	}
	return ""
}

func (m *FlowRequest) GetDstMac() string {
	if m != nil {
		return m.DstMac
	}
	return ""
}

func (m *FlowRequest) GetState() FlowRequest_FlowState {
	if m != nil {
		return m.State
	}
	return FlowRequest_FLOW_CREATED
}

type FlowResponse struct {
	Result               FlowResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=magma.lte.FlowResponse_Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FlowResponse) Reset()         { *m = FlowResponse{} }
func (m *FlowResponse) String() string { return proto.CompactTextString(m) }
func (*FlowResponse) ProtoMessage()    {}
func (*FlowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{13}
}

func (m *FlowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowResponse.Unmarshal(m, b)
}
func (m *FlowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowResponse.Marshal(b, m, deterministic)
}
func (m *FlowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowResponse.Merge(m, src)
}
func (m *FlowResponse) XXX_Size() int {
	return xxx_messageInfo_FlowResponse.Size(m)
}
func (m *FlowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FlowResponse proto.InternalMessageInfo

func (m *FlowResponse) GetResult() FlowResponse_Result {
	if m != nil {
		return m.Result
	}
	return FlowResponse_SUCCESS
}

// UEMacFlowRequest is used to link a subscriber ID to a MAC address.
// This is used for Carrier WiFi data session establishment
type UEMacFlowRequest struct {
	Sid *SubscriberID `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	// UE MAC address
	MacAddr string `protobuf:"bytes,2,opt,name=mac_addr,json=macAddr,proto3" json:"mac_addr,omitempty"`
	Msisdn  string `protobuf:"bytes,3,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	// AP MAC address
	ApMacAddr string `protobuf:"bytes,4,opt,name=ap_mac_addr,json=apMacAddr,proto3" json:"ap_mac_addr,omitempty"`
	// AP Name
	ApName string `protobuf:"bytes,5,opt,name=ap_name,json=apName,proto3" json:"ap_name,omitempty"`
	// PDP Start time
	PdpStartTime         uint64   `protobuf:"varint,6,opt,name=pdp_start_time,json=pdpStartTime,proto3" json:"pdp_start_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UEMacFlowRequest) Reset()         { *m = UEMacFlowRequest{} }
func (m *UEMacFlowRequest) String() string { return proto.CompactTextString(m) }
func (*UEMacFlowRequest) ProtoMessage()    {}
func (*UEMacFlowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{14}
}

func (m *UEMacFlowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UEMacFlowRequest.Unmarshal(m, b)
}
func (m *UEMacFlowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UEMacFlowRequest.Marshal(b, m, deterministic)
}
func (m *UEMacFlowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UEMacFlowRequest.Merge(m, src)
}
func (m *UEMacFlowRequest) XXX_Size() int {
	return xxx_messageInfo_UEMacFlowRequest.Size(m)
}
func (m *UEMacFlowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UEMacFlowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UEMacFlowRequest proto.InternalMessageInfo

func (m *UEMacFlowRequest) GetSid() *SubscriberID {
	if m != nil {
		return m.Sid
	}
	return nil
}

func (m *UEMacFlowRequest) GetMacAddr() string {
	if m != nil {
		return m.MacAddr
	}
	return ""
}

func (m *UEMacFlowRequest) GetMsisdn() string {
	if m != nil {
		return m.Msisdn
	}
	return ""
}

func (m *UEMacFlowRequest) GetApMacAddr() string {
	if m != nil {
		return m.ApMacAddr
	}
	return ""
}

func (m *UEMacFlowRequest) GetApName() string {
	if m != nil {
		return m.ApName
	}
	return ""
}

func (m *UEMacFlowRequest) GetPdpStartTime() uint64 {
	if m != nil {
		return m.PdpStartTime
	}
	return 0
}

type SubscriberQuotaUpdate struct {
	Sid *SubscriberID `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	// UE MAC address
	MacAddr              string                     `protobuf:"bytes,2,opt,name=mac_addr,json=macAddr,proto3" json:"mac_addr,omitempty"`
	UpdateType           SubscriberQuotaUpdate_Type `protobuf:"varint,3,opt,name=update_type,json=updateType,proto3,enum=magma.lte.SubscriberQuotaUpdate_Type" json:"update_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SubscriberQuotaUpdate) Reset()         { *m = SubscriberQuotaUpdate{} }
func (m *SubscriberQuotaUpdate) String() string { return proto.CompactTextString(m) }
func (*SubscriberQuotaUpdate) ProtoMessage()    {}
func (*SubscriberQuotaUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{15}
}

func (m *SubscriberQuotaUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriberQuotaUpdate.Unmarshal(m, b)
}
func (m *SubscriberQuotaUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriberQuotaUpdate.Marshal(b, m, deterministic)
}
func (m *SubscriberQuotaUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriberQuotaUpdate.Merge(m, src)
}
func (m *SubscriberQuotaUpdate) XXX_Size() int {
	return xxx_messageInfo_SubscriberQuotaUpdate.Size(m)
}
func (m *SubscriberQuotaUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriberQuotaUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriberQuotaUpdate proto.InternalMessageInfo

func (m *SubscriberQuotaUpdate) GetSid() *SubscriberID {
	if m != nil {
		return m.Sid
	}
	return nil
}

func (m *SubscriberQuotaUpdate) GetMacAddr() string {
	if m != nil {
		return m.MacAddr
	}
	return ""
}

func (m *SubscriberQuotaUpdate) GetUpdateType() SubscriberQuotaUpdate_Type {
	if m != nil {
		return m.UpdateType
	}
	return SubscriberQuotaUpdate_VALID_QUOTA
}

type UpdateSubscriberQuotaStateRequest struct {
	Updates              []*SubscriberQuotaUpdate `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *UpdateSubscriberQuotaStateRequest) Reset()         { *m = UpdateSubscriberQuotaStateRequest{} }
func (m *UpdateSubscriberQuotaStateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateSubscriberQuotaStateRequest) ProtoMessage()    {}
func (*UpdateSubscriberQuotaStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{16}
}

func (m *UpdateSubscriberQuotaStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSubscriberQuotaStateRequest.Unmarshal(m, b)
}
func (m *UpdateSubscriberQuotaStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSubscriberQuotaStateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateSubscriberQuotaStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubscriberQuotaStateRequest.Merge(m, src)
}
func (m *UpdateSubscriberQuotaStateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateSubscriberQuotaStateRequest.Size(m)
}
func (m *UpdateSubscriberQuotaStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubscriberQuotaStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubscriberQuotaStateRequest proto.InternalMessageInfo

func (m *UpdateSubscriberQuotaStateRequest) GetUpdates() []*SubscriberQuotaUpdate {
	if m != nil {
		return m.Updates
	}
	return nil
}

type TableAssignment struct {
	AppName              string   `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	MainTable            uint64   `protobuf:"varint,2,opt,name=main_table,json=mainTable,proto3" json:"main_table,omitempty"`
	ScratchTables        []uint64 `protobuf:"varint,3,rep,packed,name=scratch_tables,json=scratchTables,proto3" json:"scratch_tables,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableAssignment) Reset()         { *m = TableAssignment{} }
func (m *TableAssignment) String() string { return proto.CompactTextString(m) }
func (*TableAssignment) ProtoMessage()    {}
func (*TableAssignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{17}
}

func (m *TableAssignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableAssignment.Unmarshal(m, b)
}
func (m *TableAssignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableAssignment.Marshal(b, m, deterministic)
}
func (m *TableAssignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableAssignment.Merge(m, src)
}
func (m *TableAssignment) XXX_Size() int {
	return xxx_messageInfo_TableAssignment.Size(m)
}
func (m *TableAssignment) XXX_DiscardUnknown() {
	xxx_messageInfo_TableAssignment.DiscardUnknown(m)
}

var xxx_messageInfo_TableAssignment proto.InternalMessageInfo

func (m *TableAssignment) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *TableAssignment) GetMainTable() uint64 {
	if m != nil {
		return m.MainTable
	}
	return 0
}

func (m *TableAssignment) GetScratchTables() []uint64 {
	if m != nil {
		return m.ScratchTables
	}
	return nil
}

type AllTableAssignments struct {
	TableAssignments     []*TableAssignment `protobuf:"bytes,1,rep,name=table_assignments,json=tableAssignments,proto3" json:"table_assignments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AllTableAssignments) Reset()         { *m = AllTableAssignments{} }
func (m *AllTableAssignments) String() string { return proto.CompactTextString(m) }
func (*AllTableAssignments) ProtoMessage()    {}
func (*AllTableAssignments) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{18}
}

func (m *AllTableAssignments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllTableAssignments.Unmarshal(m, b)
}
func (m *AllTableAssignments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllTableAssignments.Marshal(b, m, deterministic)
}
func (m *AllTableAssignments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllTableAssignments.Merge(m, src)
}
func (m *AllTableAssignments) XXX_Size() int {
	return xxx_messageInfo_AllTableAssignments.Size(m)
}
func (m *AllTableAssignments) XXX_DiscardUnknown() {
	xxx_messageInfo_AllTableAssignments.DiscardUnknown(m)
}

var xxx_messageInfo_AllTableAssignments proto.InternalMessageInfo

func (m *AllTableAssignments) GetTableAssignments() []*TableAssignment {
	if m != nil {
		return m.TableAssignments
	}
	return nil
}

type SerializedRyuPacket struct {
	Pkt                  []byte   `protobuf:"bytes,1,opt,name=pkt,proto3" json:"pkt,omitempty"`
	Imsi                 string   `protobuf:"bytes,2,opt,name=imsi,proto3" json:"imsi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerializedRyuPacket) Reset()         { *m = SerializedRyuPacket{} }
func (m *SerializedRyuPacket) String() string { return proto.CompactTextString(m) }
func (*SerializedRyuPacket) ProtoMessage()    {}
func (*SerializedRyuPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{19}
}

func (m *SerializedRyuPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerializedRyuPacket.Unmarshal(m, b)
}
func (m *SerializedRyuPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerializedRyuPacket.Marshal(b, m, deterministic)
}
func (m *SerializedRyuPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerializedRyuPacket.Merge(m, src)
}
func (m *SerializedRyuPacket) XXX_Size() int {
	return xxx_messageInfo_SerializedRyuPacket.Size(m)
}
func (m *SerializedRyuPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_SerializedRyuPacket.DiscardUnknown(m)
}

var xxx_messageInfo_SerializedRyuPacket proto.InternalMessageInfo

func (m *SerializedRyuPacket) GetPkt() []byte {
	if m != nil {
		return m.Pkt
	}
	return nil
}

func (m *SerializedRyuPacket) GetImsi() string {
	if m != nil {
		return m.Imsi
	}
	return ""
}

type PacketDropTableId struct {
	TableId              int32    `protobuf:"varint,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PacketDropTableId) Reset()         { *m = PacketDropTableId{} }
func (m *PacketDropTableId) String() string { return proto.CompactTextString(m) }
func (*PacketDropTableId) ProtoMessage()    {}
func (*PacketDropTableId) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{20}
}

func (m *PacketDropTableId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PacketDropTableId.Unmarshal(m, b)
}
func (m *PacketDropTableId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PacketDropTableId.Marshal(b, m, deterministic)
}
func (m *PacketDropTableId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PacketDropTableId.Merge(m, src)
}
func (m *PacketDropTableId) XXX_Size() int {
	return xxx_messageInfo_PacketDropTableId.Size(m)
}
func (m *PacketDropTableId) XXX_DiscardUnknown() {
	xxx_messageInfo_PacketDropTableId.DiscardUnknown(m)
}

var xxx_messageInfo_PacketDropTableId proto.InternalMessageInfo

func (m *PacketDropTableId) GetTableId() int32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

//ToDo latest state change will reflect in upcoming proto
type FsmState struct {
	State                FsmState_FsmState `protobuf:"varint,1,opt,name=state,proto3,enum=magma.lte.FsmState_FsmState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FsmState) Reset()         { *m = FsmState{} }
func (m *FsmState) String() string { return proto.CompactTextString(m) }
func (*FsmState) ProtoMessage()    {}
func (*FsmState) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{21}
}

func (m *FsmState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsmState.Unmarshal(m, b)
}
func (m *FsmState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsmState.Marshal(b, m, deterministic)
}
func (m *FsmState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsmState.Merge(m, src)
}
func (m *FsmState) XXX_Size() int {
	return xxx_messageInfo_FsmState.Size(m)
}
func (m *FsmState) XXX_DiscardUnknown() {
	xxx_messageInfo_FsmState.DiscardUnknown(m)
}

var xxx_messageInfo_FsmState proto.InternalMessageInfo

func (m *FsmState) GetState() FsmState_FsmState {
	if m != nil {
		return m.State
	}
	return FsmState_SESSION_ACTIVE
}

type OuterHeadRemoval struct {
	OHdRemoDescr         uint32   `protobuf:"varint,1,opt,name=o_hd_remo_descr,json=oHdRemoDescr,proto3" json:"o_hd_remo_descr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OuterHeadRemoval) Reset()         { *m = OuterHeadRemoval{} }
func (m *OuterHeadRemoval) String() string { return proto.CompactTextString(m) }
func (*OuterHeadRemoval) ProtoMessage()    {}
func (*OuterHeadRemoval) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{22}
}

func (m *OuterHeadRemoval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OuterHeadRemoval.Unmarshal(m, b)
}
func (m *OuterHeadRemoval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OuterHeadRemoval.Marshal(b, m, deterministic)
}
func (m *OuterHeadRemoval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OuterHeadRemoval.Merge(m, src)
}
func (m *OuterHeadRemoval) XXX_Size() int {
	return xxx_messageInfo_OuterHeadRemoval.Size(m)
}
func (m *OuterHeadRemoval) XXX_DiscardUnknown() {
	xxx_messageInfo_OuterHeadRemoval.DiscardUnknown(m)
}

var xxx_messageInfo_OuterHeadRemoval proto.InternalMessageInfo

func (m *OuterHeadRemoval) GetOHdRemoDescr() uint32 {
	if m != nil {
		return m.OHdRemoDescr
	}
	return 0
}

type SdfFilters struct {
	Fd                   *FlowDescriptor `protobuf:"bytes,1,opt,name=fd,proto3" json:"fd,omitempty"`
	Ttc                  []byte          `protobuf:"bytes,2,opt,name=ttc,proto3" json:"ttc,omitempty"`
	Spi                  []byte          `protobuf:"bytes,3,opt,name=spi,proto3" json:"spi,omitempty"`
	Fl                   []byte          `protobuf:"bytes,4,opt,name=fl,proto3" json:"fl,omitempty"`
	SdfId                uint32          `protobuf:"varint,5,opt,name=sdf_id,json=sdfId,proto3" json:"sdf_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SdfFilters) Reset()         { *m = SdfFilters{} }
func (m *SdfFilters) String() string { return proto.CompactTextString(m) }
func (*SdfFilters) ProtoMessage()    {}
func (*SdfFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{23}
}

func (m *SdfFilters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdfFilters.Unmarshal(m, b)
}
func (m *SdfFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdfFilters.Marshal(b, m, deterministic)
}
func (m *SdfFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdfFilters.Merge(m, src)
}
func (m *SdfFilters) XXX_Size() int {
	return xxx_messageInfo_SdfFilters.Size(m)
}
func (m *SdfFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_SdfFilters.DiscardUnknown(m)
}

var xxx_messageInfo_SdfFilters proto.InternalMessageInfo

func (m *SdfFilters) GetFd() *FlowDescriptor {
	if m != nil {
		return m.Fd
	}
	return nil
}

func (m *SdfFilters) GetTtc() []byte {
	if m != nil {
		return m.Ttc
	}
	return nil
}

func (m *SdfFilters) GetSpi() []byte {
	if m != nil {
		return m.Spi
	}
	return nil
}

func (m *SdfFilters) GetFl() []byte {
	if m != nil {
		return m.Fl
	}
	return nil
}

func (m *SdfFilters) GetSdfId() uint32 {
	if m != nil {
		return m.SdfId
	}
	return 0
}

type FlowDescriptor struct {
	Match                *FlowMatchNew `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	Action               Action        `protobuf:"varint,2,opt,name=action,proto3,enum=magma.lte.Action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FlowDescriptor) Reset()         { *m = FlowDescriptor{} }
func (m *FlowDescriptor) String() string { return proto.CompactTextString(m) }
func (*FlowDescriptor) ProtoMessage()    {}
func (*FlowDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{24}
}

func (m *FlowDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowDescriptor.Unmarshal(m, b)
}
func (m *FlowDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowDescriptor.Marshal(b, m, deterministic)
}
func (m *FlowDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowDescriptor.Merge(m, src)
}
func (m *FlowDescriptor) XXX_Size() int {
	return xxx_messageInfo_FlowDescriptor.Size(m)
}
func (m *FlowDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_FlowDescriptor proto.InternalMessageInfo

func (m *FlowDescriptor) GetMatch() *FlowMatchNew {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *FlowDescriptor) GetAction() Action {
	if m != nil {
		return m.Action
	}
	return Action_DROP
}

type FlowMatchNew struct {
	Ipv4Src              string   `protobuf:"bytes,1,opt,name=ipv4_src,json=ipv4Src,proto3" json:"ipv4_src,omitempty"`
	Ipv4Dst              string   `protobuf:"bytes,2,opt,name=ipv4_dst,json=ipv4Dst,proto3" json:"ipv4_dst,omitempty"`
	ProtocolType         string   `protobuf:"bytes,3,opt,name=protocol_type,json=protocolType,proto3" json:"protocol_type,omitempty"`
	DstPort              uint32   `protobuf:"varint,4,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
	SrcPort              uint32   `protobuf:"varint,5,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlowMatchNew) Reset()         { *m = FlowMatchNew{} }
func (m *FlowMatchNew) String() string { return proto.CompactTextString(m) }
func (*FlowMatchNew) ProtoMessage()    {}
func (*FlowMatchNew) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{25}
}

func (m *FlowMatchNew) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowMatchNew.Unmarshal(m, b)
}
func (m *FlowMatchNew) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowMatchNew.Marshal(b, m, deterministic)
}
func (m *FlowMatchNew) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowMatchNew.Merge(m, src)
}
func (m *FlowMatchNew) XXX_Size() int {
	return xxx_messageInfo_FlowMatchNew.Size(m)
}
func (m *FlowMatchNew) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowMatchNew.DiscardUnknown(m)
}

var xxx_messageInfo_FlowMatchNew proto.InternalMessageInfo

func (m *FlowMatchNew) GetIpv4Src() string {
	if m != nil {
		return m.Ipv4Src
	}
	return ""
}

func (m *FlowMatchNew) GetIpv4Dst() string {
	if m != nil {
		return m.Ipv4Dst
	}
	return ""
}

func (m *FlowMatchNew) GetProtocolType() string {
	if m != nil {
		return m.ProtocolType
	}
	return ""
}

func (m *FlowMatchNew) GetDstPort() uint32 {
	if m != nil {
		return m.DstPort
	}
	return 0
}

func (m *FlowMatchNew) GetSrcPort() uint32 {
	if m != nil {
		return m.SrcPort
	}
	return 0
}

type RedirectInfo struct {
	RedAddType           RedirectInfo_RedirectAddrType `protobuf:"varint,1,opt,name=red_add_type,json=redAddType,proto3,enum=magma.lte.RedirectInfo_RedirectAddrType" json:"red_add_type,omitempty"`
	RedServerAddr        string                        `protobuf:"bytes,2,opt,name=red_server_addr,json=redServerAddr,proto3" json:"red_server_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *RedirectInfo) Reset()         { *m = RedirectInfo{} }
func (m *RedirectInfo) String() string { return proto.CompactTextString(m) }
func (*RedirectInfo) ProtoMessage()    {}
func (*RedirectInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{26}
}

func (m *RedirectInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedirectInfo.Unmarshal(m, b)
}
func (m *RedirectInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedirectInfo.Marshal(b, m, deterministic)
}
func (m *RedirectInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedirectInfo.Merge(m, src)
}
func (m *RedirectInfo) XXX_Size() int {
	return xxx_messageInfo_RedirectInfo.Size(m)
}
func (m *RedirectInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RedirectInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RedirectInfo proto.InternalMessageInfo

func (m *RedirectInfo) GetRedAddType() RedirectInfo_RedirectAddrType {
	if m != nil {
		return m.RedAddType
	}
	return RedirectInfo_IPV4
}

func (m *RedirectInfo) GetRedServerAddr() string {
	if m != nil {
		return m.RedServerAddr
	}
	return ""
}

type OuterHeaderCreation struct {
	OTeid                uint32   `protobuf:"varint,1,opt,name=o_teid,json=oTeid,proto3" json:"o_teid,omitempty"`
	GnbIpv4Adr           string   `protobuf:"bytes,2,opt,name=gnb_ipv4_adr,json=gnbIpv4Adr,proto3" json:"gnb_ipv4_adr,omitempty"`
	PortNo               uint32   `protobuf:"varint,3,opt,name=port_no,json=portNo,proto3" json:"port_no,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OuterHeaderCreation) Reset()         { *m = OuterHeaderCreation{} }
func (m *OuterHeaderCreation) String() string { return proto.CompactTextString(m) }
func (*OuterHeaderCreation) ProtoMessage()    {}
func (*OuterHeaderCreation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{27}
}

func (m *OuterHeaderCreation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OuterHeaderCreation.Unmarshal(m, b)
}
func (m *OuterHeaderCreation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OuterHeaderCreation.Marshal(b, m, deterministic)
}
func (m *OuterHeaderCreation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OuterHeaderCreation.Merge(m, src)
}
func (m *OuterHeaderCreation) XXX_Size() int {
	return xxx_messageInfo_OuterHeaderCreation.Size(m)
}
func (m *OuterHeaderCreation) XXX_DiscardUnknown() {
	xxx_messageInfo_OuterHeaderCreation.DiscardUnknown(m)
}

var xxx_messageInfo_OuterHeaderCreation proto.InternalMessageInfo

func (m *OuterHeaderCreation) GetOTeid() uint32 {
	if m != nil {
		return m.OTeid
	}
	return 0
}

func (m *OuterHeaderCreation) GetGnbIpv4Adr() string {
	if m != nil {
		return m.GnbIpv4Adr
	}
	return ""
}

func (m *OuterHeaderCreation) GetPortNo() uint32 {
	if m != nil {
		return m.PortNo
	}
	return 0
}

//Table 7.5.2.3-2: Forwarding Parameters IE in FAR
type FwdParam struct {
	DestIface            uint32               `protobuf:"varint,1,opt,name=dest_iface,json=destIface,proto3" json:"dest_iface,omitempty"`
	NetInstance          string               `protobuf:"bytes,2,opt,name=net_instance,json=netInstance,proto3" json:"net_instance,omitempty"`
	RedirectInfo         *RedirectInfo        `protobuf:"bytes,3,opt,name=redirect_info,json=redirectInfo,proto3" json:"redirect_info,omitempty"`
	OutrHeadCr           *OuterHeaderCreation `protobuf:"bytes,4,opt,name=outr_head_cr,json=outrHeadCr,proto3" json:"outr_head_cr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FwdParam) Reset()         { *m = FwdParam{} }
func (m *FwdParam) String() string { return proto.CompactTextString(m) }
func (*FwdParam) ProtoMessage()    {}
func (*FwdParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{28}
}

func (m *FwdParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FwdParam.Unmarshal(m, b)
}
func (m *FwdParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FwdParam.Marshal(b, m, deterministic)
}
func (m *FwdParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FwdParam.Merge(m, src)
}
func (m *FwdParam) XXX_Size() int {
	return xxx_messageInfo_FwdParam.Size(m)
}
func (m *FwdParam) XXX_DiscardUnknown() {
	xxx_messageInfo_FwdParam.DiscardUnknown(m)
}

var xxx_messageInfo_FwdParam proto.InternalMessageInfo

func (m *FwdParam) GetDestIface() uint32 {
	if m != nil {
		return m.DestIface
	}
	return 0
}

func (m *FwdParam) GetNetInstance() string {
	if m != nil {
		return m.NetInstance
	}
	return ""
}

func (m *FwdParam) GetRedirectInfo() *RedirectInfo {
	if m != nil {
		return m.RedirectInfo
	}
	return nil
}

func (m *FwdParam) GetOutrHeadCr() *OuterHeaderCreation {
	if m != nil {
		return m.OutrHeadCr
	}
	return nil
}

//Table 7.5.2.3-3: Duplicating Parameters IE in FAR
type DupParam struct {
	DestIface            uint32   `protobuf:"varint,1,opt,name=dest_iface,json=destIface,proto3" json:"dest_iface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DupParam) Reset()         { *m = DupParam{} }
func (m *DupParam) String() string { return proto.CompactTextString(m) }
func (*DupParam) ProtoMessage()    {}
func (*DupParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{29}
}

func (m *DupParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DupParam.Unmarshal(m, b)
}
func (m *DupParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DupParam.Marshal(b, m, deterministic)
}
func (m *DupParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DupParam.Merge(m, src)
}
func (m *DupParam) XXX_Size() int {
	return xxx_messageInfo_DupParam.Size(m)
}
func (m *DupParam) XXX_DiscardUnknown() {
	xxx_messageInfo_DupParam.DiscardUnknown(m)
}

var xxx_messageInfo_DupParam proto.InternalMessageInfo

func (m *DupParam) GetDestIface() uint32 {
	if m != nil {
		return m.DestIface
	}
	return 0
}

//PDI Message Table 7.5.2.2-2: PDI IE within PFCP Session Establishment Request
type PDI struct {
	SrcInterface         uint32      `protobuf:"varint,1,opt,name=src_interface,json=srcInterface,proto3" json:"src_interface,omitempty"`
	LocalFTeid           uint32      `protobuf:"varint,2,opt,name=local_f_teid,json=localFTeid,proto3" json:"local_f_teid,omitempty"`
	NetInstance          string      `protobuf:"bytes,3,opt,name=net_instance,json=netInstance,proto3" json:"net_instance,omitempty"`
	UeIpAdr              string      `protobuf:"bytes,4,opt,name=ue_ip_adr,json=ueIpAdr,proto3" json:"ue_ip_adr,omitempty"`
	TrEpId               []byte      `protobuf:"bytes,5,opt,name=tr_ep_id,json=trEpId,proto3" json:"tr_ep_id,omitempty"`
	SdfFilters           *SdfFilters `protobuf:"bytes,6,opt,name=sdf_filters,json=sdfFilters,proto3" json:"sdf_filters,omitempty"`
	AppId                string      `protobuf:"bytes,7,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PDI) Reset()         { *m = PDI{} }
func (m *PDI) String() string { return proto.CompactTextString(m) }
func (*PDI) ProtoMessage()    {}
func (*PDI) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{30}
}

func (m *PDI) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PDI.Unmarshal(m, b)
}
func (m *PDI) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PDI.Marshal(b, m, deterministic)
}
func (m *PDI) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PDI.Merge(m, src)
}
func (m *PDI) XXX_Size() int {
	return xxx_messageInfo_PDI.Size(m)
}
func (m *PDI) XXX_DiscardUnknown() {
	xxx_messageInfo_PDI.DiscardUnknown(m)
}

var xxx_messageInfo_PDI proto.InternalMessageInfo

func (m *PDI) GetSrcInterface() uint32 {
	if m != nil {
		return m.SrcInterface
	}
	return 0
}

func (m *PDI) GetLocalFTeid() uint32 {
	if m != nil {
		return m.LocalFTeid
	}
	return 0
}

func (m *PDI) GetNetInstance() string {
	if m != nil {
		return m.NetInstance
	}
	return ""
}

func (m *PDI) GetUeIpAdr() string {
	if m != nil {
		return m.UeIpAdr
	}
	return ""
}

func (m *PDI) GetTrEpId() []byte {
	if m != nil {
		return m.TrEpId
	}
	return nil
}

func (m *PDI) GetSdfFilters() *SdfFilters {
	if m != nil {
		return m.SdfFilters
	}
	return nil
}

func (m *PDI) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

//PDR message Table 7.5.2.2-1: Create PDR IE within PFCP Session Establishment
type SetGroupPDR struct {
	PdrId                uint32                  `protobuf:"varint,1,opt,name=pdr_id,json=pdrId,proto3" json:"pdr_id,omitempty"`
	PdrVersion           int32                   `protobuf:"varint,2,opt,name=pdr_version,json=pdrVersion,proto3" json:"pdr_version,omitempty"`
	Precedence           uint32                  `protobuf:"varint,3,opt,name=precedence,proto3" json:"precedence,omitempty"`
	PdrState             PdrState                `protobuf:"varint,4,opt,name=pdr_state,json=pdrState,proto3,enum=magma.lte.PdrState" json:"pdr_state,omitempty"`
	Pdi                  *PDI                    `protobuf:"bytes,5,opt,name=pdi,proto3" json:"pdi,omitempty"`
	OHRemoDesc           uint32                  `protobuf:"varint,6,opt,name=o_h_remo_desc,json=oHRemoDesc,proto3" json:"o_h_remo_desc,omitempty"`
	ActivePredRule       string                  `protobuf:"bytes,7,opt,name=active_pred_rule,json=activePredRule,proto3" json:"active_pred_rule,omitempty"`
	SetGrFar             *SetGroupFAR            `protobuf:"bytes,8,opt,name=set_gr_far,json=setGrFar,proto3" json:"set_gr_far,omitempty"`
	DeactivateFlowReq    *DeactivateFlowsRequest `protobuf:"bytes,9,opt,name=deactivate_flow_req,json=deactivateFlowReq,proto3" json:"deactivate_flow_req,omitempty"`
	ActivateFlowReq      *ActivateFlowsRequest   `protobuf:"bytes,10,opt,name=activate_flow_req,json=activateFlowReq,proto3" json:"activate_flow_req,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SetGroupPDR) Reset()         { *m = SetGroupPDR{} }
func (m *SetGroupPDR) String() string { return proto.CompactTextString(m) }
func (*SetGroupPDR) ProtoMessage()    {}
func (*SetGroupPDR) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{31}
}

func (m *SetGroupPDR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGroupPDR.Unmarshal(m, b)
}
func (m *SetGroupPDR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGroupPDR.Marshal(b, m, deterministic)
}
func (m *SetGroupPDR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGroupPDR.Merge(m, src)
}
func (m *SetGroupPDR) XXX_Size() int {
	return xxx_messageInfo_SetGroupPDR.Size(m)
}
func (m *SetGroupPDR) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGroupPDR.DiscardUnknown(m)
}

var xxx_messageInfo_SetGroupPDR proto.InternalMessageInfo

func (m *SetGroupPDR) GetPdrId() uint32 {
	if m != nil {
		return m.PdrId
	}
	return 0
}

func (m *SetGroupPDR) GetPdrVersion() int32 {
	if m != nil {
		return m.PdrVersion
	}
	return 0
}

func (m *SetGroupPDR) GetPrecedence() uint32 {
	if m != nil {
		return m.Precedence
	}
	return 0
}

func (m *SetGroupPDR) GetPdrState() PdrState {
	if m != nil {
		return m.PdrState
	}
	return PdrState_INSTALL
}

func (m *SetGroupPDR) GetPdi() *PDI {
	if m != nil {
		return m.Pdi
	}
	return nil
}

func (m *SetGroupPDR) GetOHRemoDesc() uint32 {
	if m != nil {
		return m.OHRemoDesc
	}
	return 0
}

func (m *SetGroupPDR) GetActivePredRule() string {
	if m != nil {
		return m.ActivePredRule
	}
	return ""
}

func (m *SetGroupPDR) GetSetGrFar() *SetGroupFAR {
	if m != nil {
		return m.SetGrFar
	}
	return nil
}

func (m *SetGroupPDR) GetDeactivateFlowReq() *DeactivateFlowsRequest {
	if m != nil {
		return m.DeactivateFlowReq
	}
	return nil
}

func (m *SetGroupPDR) GetActivateFlowReq() *ActivateFlowsRequest {
	if m != nil {
		return m.ActivateFlowReq
	}
	return nil
}

//FAR message Table 7.5.2.3-1: Create FAR IE within PFCP Session Establishment
type SetGroupFAR struct {
	FarActionToApply     []Action  `protobuf:"varint,2,rep,packed,name=far_action_to_apply,json=farActionToApply,proto3,enum=magma.lte.Action" json:"far_action_to_apply,omitempty"`
	FwdParm              *FwdParam `protobuf:"bytes,3,opt,name=fwd_parm,json=fwdParm,proto3" json:"fwd_parm,omitempty"`
	DuParam              *DupParam `protobuf:"bytes,4,opt,name=du_param,json=duParam,proto3" json:"du_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SetGroupFAR) Reset()         { *m = SetGroupFAR{} }
func (m *SetGroupFAR) String() string { return proto.CompactTextString(m) }
func (*SetGroupFAR) ProtoMessage()    {}
func (*SetGroupFAR) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{32}
}

func (m *SetGroupFAR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGroupFAR.Unmarshal(m, b)
}
func (m *SetGroupFAR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGroupFAR.Marshal(b, m, deterministic)
}
func (m *SetGroupFAR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGroupFAR.Merge(m, src)
}
func (m *SetGroupFAR) XXX_Size() int {
	return xxx_messageInfo_SetGroupFAR.Size(m)
}
func (m *SetGroupFAR) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGroupFAR.DiscardUnknown(m)
}

var xxx_messageInfo_SetGroupFAR proto.InternalMessageInfo

func (m *SetGroupFAR) GetFarActionToApply() []Action {
	if m != nil {
		return m.FarActionToApply
	}
	return nil
}

func (m *SetGroupFAR) GetFwdParm() *FwdParam {
	if m != nil {
		return m.FwdParm
	}
	return nil
}

func (m *SetGroupFAR) GetDuParam() *DupParam {
	if m != nil {
		return m.DuParam
	}
	return nil
}

//SET message - SMF to Upf Session Requests
type SessionSet struct {
	SubscriberId         string         `protobuf:"bytes,1,opt,name=subscriber_id,json=subscriberId,proto3" json:"subscriber_id,omitempty"`
	LocalFTeid           uint32         `protobuf:"varint,2,opt,name=local_f_teid,json=localFTeid,proto3" json:"local_f_teid,omitempty"`
	SessionVersion       uint32         `protobuf:"varint,3,opt,name=session_version,json=sessionVersion,proto3" json:"session_version,omitempty"`
	NodeId               *NodeID        `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	State                *FsmState      `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	SetGrPdr             []*SetGroupPDR `protobuf:"bytes,6,rep,name=set_gr_pdr,json=setGrPdr,proto3" json:"set_gr_pdr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SessionSet) Reset()         { *m = SessionSet{} }
func (m *SessionSet) String() string { return proto.CompactTextString(m) }
func (*SessionSet) ProtoMessage()    {}
func (*SessionSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{33}
}

func (m *SessionSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionSet.Unmarshal(m, b)
}
func (m *SessionSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionSet.Marshal(b, m, deterministic)
}
func (m *SessionSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionSet.Merge(m, src)
}
func (m *SessionSet) XXX_Size() int {
	return xxx_messageInfo_SessionSet.Size(m)
}
func (m *SessionSet) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionSet.DiscardUnknown(m)
}

var xxx_messageInfo_SessionSet proto.InternalMessageInfo

func (m *SessionSet) GetSubscriberId() string {
	if m != nil {
		return m.SubscriberId
	}
	return ""
}

func (m *SessionSet) GetLocalFTeid() uint32 {
	if m != nil {
		return m.LocalFTeid
	}
	return 0
}

func (m *SessionSet) GetSessionVersion() uint32 {
	if m != nil {
		return m.SessionVersion
	}
	return 0
}

func (m *SessionSet) GetNodeId() *NodeID {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *SessionSet) GetState() *FsmState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *SessionSet) GetSetGrPdr() []*SetGroupPDR {
	if m != nil {
		return m.SetGrPdr
	}
	return nil
}

// Response of SetSession Message from SMF.
// 15.8 (Sec 7.5.3.1) : PFCP Session Response format
type UPFSessionContextState struct {
	CauseInfo            *CauseIE                `protobuf:"bytes,1,opt,name=cause_info,json=causeInfo,proto3" json:"cause_info,omitempty"`
	SessionSnapshot      *UPFSessionState        `protobuf:"bytes,2,opt,name=session_snapshot,json=sessionSnapshot,proto3" json:"session_snapshot,omitempty"`
	FailureRuleId        *FailureRuleInformation `protobuf:"bytes,3,opt,name=failure_rule_id,json=failureRuleId,proto3" json:"failure_rule_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *UPFSessionContextState) Reset()         { *m = UPFSessionContextState{} }
func (m *UPFSessionContextState) String() string { return proto.CompactTextString(m) }
func (*UPFSessionContextState) ProtoMessage()    {}
func (*UPFSessionContextState) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{34}
}

func (m *UPFSessionContextState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UPFSessionContextState.Unmarshal(m, b)
}
func (m *UPFSessionContextState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UPFSessionContextState.Marshal(b, m, deterministic)
}
func (m *UPFSessionContextState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UPFSessionContextState.Merge(m, src)
}
func (m *UPFSessionContextState) XXX_Size() int {
	return xxx_messageInfo_UPFSessionContextState.Size(m)
}
func (m *UPFSessionContextState) XXX_DiscardUnknown() {
	xxx_messageInfo_UPFSessionContextState.DiscardUnknown(m)
}

var xxx_messageInfo_UPFSessionContextState proto.InternalMessageInfo

func (m *UPFSessionContextState) GetCauseInfo() *CauseIE {
	if m != nil {
		return m.CauseInfo
	}
	return nil
}

func (m *UPFSessionContextState) GetSessionSnapshot() *UPFSessionState {
	if m != nil {
		return m.SessionSnapshot
	}
	return nil
}

func (m *UPFSessionContextState) GetFailureRuleId() *FailureRuleInformation {
	if m != nil {
		return m.FailureRuleId
	}
	return nil
}

//15.8,  Section 8.2.1
type CauseIE struct {
	CauseIe              CauseIE_CauseValues `protobuf:"varint,1,opt,name=cause_ie,json=causeIe,proto3,enum=magma.lte.CauseIE_CauseValues" json:"cause_ie,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CauseIE) Reset()         { *m = CauseIE{} }
func (m *CauseIE) String() string { return proto.CompactTextString(m) }
func (*CauseIE) ProtoMessage()    {}
func (*CauseIE) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{35}
}

func (m *CauseIE) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CauseIE.Unmarshal(m, b)
}
func (m *CauseIE) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CauseIE.Marshal(b, m, deterministic)
}
func (m *CauseIE) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CauseIE.Merge(m, src)
}
func (m *CauseIE) XXX_Size() int {
	return xxx_messageInfo_CauseIE.Size(m)
}
func (m *CauseIE) XXX_DiscardUnknown() {
	xxx_messageInfo_CauseIE.DiscardUnknown(m)
}

var xxx_messageInfo_CauseIE proto.InternalMessageInfo

func (m *CauseIE) GetCauseIe() CauseIE_CauseValues {
	if m != nil {
		return m.CauseIe
	}
	return CauseIE_RESERVED
}

//For now only PDR is encoded as it encompass FAR and QER.
type FailureRuleInformation struct {
	Pdr                  []*OffendingIE `protobuf:"bytes,1,rep,name=pdr,proto3" json:"pdr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *FailureRuleInformation) Reset()         { *m = FailureRuleInformation{} }
func (m *FailureRuleInformation) String() string { return proto.CompactTextString(m) }
func (*FailureRuleInformation) ProtoMessage()    {}
func (*FailureRuleInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{36}
}

func (m *FailureRuleInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailureRuleInformation.Unmarshal(m, b)
}
func (m *FailureRuleInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailureRuleInformation.Marshal(b, m, deterministic)
}
func (m *FailureRuleInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailureRuleInformation.Merge(m, src)
}
func (m *FailureRuleInformation) XXX_Size() int {
	return xxx_messageInfo_FailureRuleInformation.Size(m)
}
func (m *FailureRuleInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_FailureRuleInformation.DiscardUnknown(m)
}

var xxx_messageInfo_FailureRuleInformation proto.InternalMessageInfo

func (m *FailureRuleInformation) GetPdr() []*OffendingIE {
	if m != nil {
		return m.Pdr
	}
	return nil
}

//Failure Report
type OffendingIE struct {
	Identifier            uint32                 `protobuf:"varint,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Version               uint32                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	QosEnforceRuleResults *ActivateFlowsResult   `protobuf:"bytes,3,opt,name=qos_enforce_rule_results,json=qosEnforceRuleResults,proto3" json:"qos_enforce_rule_results,omitempty"`
	DelQerResults         *DeactivateFlowsResult `protobuf:"bytes,4,opt,name=del_qer_results,json=delQerResults,proto3" json:"del_qer_results,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}               `json:"-"`
	XXX_unrecognized      []byte                 `json:"-"`
	XXX_sizecache         int32                  `json:"-"`
}

func (m *OffendingIE) Reset()         { *m = OffendingIE{} }
func (m *OffendingIE) String() string { return proto.CompactTextString(m) }
func (*OffendingIE) ProtoMessage()    {}
func (*OffendingIE) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{37}
}

func (m *OffendingIE) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OffendingIE.Unmarshal(m, b)
}
func (m *OffendingIE) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OffendingIE.Marshal(b, m, deterministic)
}
func (m *OffendingIE) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OffendingIE.Merge(m, src)
}
func (m *OffendingIE) XXX_Size() int {
	return xxx_messageInfo_OffendingIE.Size(m)
}
func (m *OffendingIE) XXX_DiscardUnknown() {
	xxx_messageInfo_OffendingIE.DiscardUnknown(m)
}

var xxx_messageInfo_OffendingIE proto.InternalMessageInfo

func (m *OffendingIE) GetIdentifier() uint32 {
	if m != nil {
		return m.Identifier
	}
	return 0
}

func (m *OffendingIE) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *OffendingIE) GetQosEnforceRuleResults() *ActivateFlowsResult {
	if m != nil {
		return m.QosEnforceRuleResults
	}
	return nil
}

func (m *OffendingIE) GetDelQerResults() *DeactivateFlowsResult {
	if m != nil {
		return m.DelQerResults
	}
	return nil
}

func init() {
	proto.RegisterEnum("magma.lte.Action", Action_name, Action_value)
	proto.RegisterEnum("magma.lte.SourceInterfaceType", SourceInterfaceType_name, SourceInterfaceType_value)
	proto.RegisterEnum("magma.lte.PdrState", PdrState_name, PdrState_value)
	proto.RegisterEnum("magma.lte.SetupFlowsResult_Result", SetupFlowsResult_Result_name, SetupFlowsResult_Result_value)
	proto.RegisterEnum("magma.lte.RequestOriginType_OriginType", RequestOriginType_OriginType_name, RequestOriginType_OriginType_value)
	proto.RegisterEnum("magma.lte.RuleModResult_Result", RuleModResult_Result_name, RuleModResult_Result_value)
	proto.RegisterEnum("magma.lte.DeactivateFlowsResult_Result", DeactivateFlowsResult_Result_name, DeactivateFlowsResult_Result_value)
	proto.RegisterEnum("magma.lte.FlowRequest_FlowState", FlowRequest_FlowState_name, FlowRequest_FlowState_value)
	proto.RegisterEnum("magma.lte.FlowResponse_Result", FlowResponse_Result_name, FlowResponse_Result_value)
	proto.RegisterEnum("magma.lte.SubscriberQuotaUpdate_Type", SubscriberQuotaUpdate_Type_name, SubscriberQuotaUpdate_Type_value)
	proto.RegisterEnum("magma.lte.FsmState_FsmState", FsmState_FsmState_name, FsmState_FsmState_value)
	proto.RegisterEnum("magma.lte.RedirectInfo_RedirectAddrType", RedirectInfo_RedirectAddrType_name, RedirectInfo_RedirectAddrType_value)
	proto.RegisterEnum("magma.lte.CauseIE_CauseValues", CauseIE_CauseValues_name, CauseIE_CauseValues_value)
	proto.RegisterType((*SetupFlowsRequest)(nil), "magma.lte.SetupFlowsRequest")
	proto.RegisterType((*SetupDefaultRequest)(nil), "magma.lte.SetupDefaultRequest")
	proto.RegisterType((*SetupUEMacRequest)(nil), "magma.lte.SetupUEMacRequest")
	proto.RegisterType((*SetupPolicyRequest)(nil), "magma.lte.SetupPolicyRequest")
	proto.RegisterType((*SetupQuotaRequest)(nil), "magma.lte.SetupQuotaRequest")
	proto.RegisterType((*SetupFlowsResult)(nil), "magma.lte.SetupFlowsResult")
	proto.RegisterType((*RequestOriginType)(nil), "magma.lte.RequestOriginType")
	proto.RegisterType((*ActivateFlowsRequest)(nil), "magma.lte.ActivateFlowsRequest")
	proto.RegisterType((*DeactivateFlowsRequest)(nil), "magma.lte.DeactivateFlowsRequest")
	proto.RegisterType((*RuleModResult)(nil), "magma.lte.RuleModResult")
	proto.RegisterType((*ActivateFlowsResult)(nil), "magma.lte.ActivateFlowsResult")
	proto.RegisterType((*DeactivateFlowsResult)(nil), "magma.lte.DeactivateFlowsResult")
	proto.RegisterType((*FlowRequest)(nil), "magma.lte.FlowRequest")
	proto.RegisterType((*FlowResponse)(nil), "magma.lte.FlowResponse")
	proto.RegisterType((*UEMacFlowRequest)(nil), "magma.lte.UEMacFlowRequest")
	proto.RegisterType((*SubscriberQuotaUpdate)(nil), "magma.lte.SubscriberQuotaUpdate")
	proto.RegisterType((*UpdateSubscriberQuotaStateRequest)(nil), "magma.lte.UpdateSubscriberQuotaStateRequest")
	proto.RegisterType((*TableAssignment)(nil), "magma.lte.TableAssignment")
	proto.RegisterType((*AllTableAssignments)(nil), "magma.lte.AllTableAssignments")
	proto.RegisterType((*SerializedRyuPacket)(nil), "magma.lte.SerializedRyuPacket")
	proto.RegisterType((*PacketDropTableId)(nil), "magma.lte.PacketDropTableId")
	proto.RegisterType((*FsmState)(nil), "magma.lte.Fsm_state")
	proto.RegisterType((*OuterHeadRemoval)(nil), "magma.lte.OuterHeadRemoval")
	proto.RegisterType((*SdfFilters)(nil), "magma.lte.SdfFilters")
	proto.RegisterType((*FlowDescriptor)(nil), "magma.lte.FlowDescriptor")
	proto.RegisterType((*FlowMatchNew)(nil), "magma.lte.FlowMatchNew")
	proto.RegisterType((*RedirectInfo)(nil), "magma.lte.RedirectInfo")
	proto.RegisterType((*OuterHeaderCreation)(nil), "magma.lte.OuterHeaderCreation")
	proto.RegisterType((*FwdParam)(nil), "magma.lte.FwdParam")
	proto.RegisterType((*DupParam)(nil), "magma.lte.DupParam")
	proto.RegisterType((*PDI)(nil), "magma.lte.PDI")
	proto.RegisterType((*SetGroupPDR)(nil), "magma.lte.SetGroupPDR")
	proto.RegisterType((*SetGroupFAR)(nil), "magma.lte.SetGroupFAR")
	proto.RegisterType((*SessionSet)(nil), "magma.lte.SessionSet")
	proto.RegisterType((*UPFSessionContextState)(nil), "magma.lte.UPFSessionContextState")
	proto.RegisterType((*CauseIE)(nil), "magma.lte.CauseIE")
	proto.RegisterType((*FailureRuleInformation)(nil), "magma.lte.FailureRuleInformation")
	proto.RegisterType((*OffendingIE)(nil), "magma.lte.OffendingIE")
}

func init() { proto.RegisterFile("lte/protos/pipelined.proto", fileDescriptor_e17e923ef6f5752e) }

var fileDescriptor_e17e923ef6f5752e = []byte{
	// 3400 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x3a, 0xcb, 0x92, 0x1b, 0xc9,
	0x56, 0xad, 0x47, 0xeb, 0x71, 0x24, 0x75, 0x97, 0xb3, 0xed, 0x7e, 0x79, 0xec, 0x69, 0xd7, 0xcc,
	0x30, 0x6d, 0xc3, 0x6d, 0x83, 0xaf, 0xc3, 0xc3, 0xcc, 0x10, 0xdc, 0x5b, 0x96, 0x4a, 0xdd, 0x35,
	0x57, 0x2d, 0xc9, 0x59, 0x52, 0x8f, 0x87, 0x05, 0x19, 0xd5, 0x95, 0xa9, 0x76, 0x31, 0xa5, 0xaa,
	0x72, 0x56, 0xa9, 0x3d, 0x26, 0x08, 0x16, 0x2c, 0x58, 0xb0, 0x62, 0xc1, 0x0a, 0x16, 0x7c, 0x00,
	0x0b, 0x82, 0xe5, 0xfd, 0x06, 0x88, 0x60, 0xc3, 0x0e, 0xf8, 0x01, 0x22, 0x88, 0x60, 0xc1, 0x07,
	0x10, 0x99, 0x59, 0xa5, 0x2e, 0xa9, 0x65, 0xf7, 0xcc, 0x9d, 0x61, 0xa5, 0xac, 0x93, 0x27, 0x4f,
	0x9e, 0x3c, 0xef, 0x93, 0x29, 0xd8, 0xf7, 0x13, 0xf6, 0x38, 0xe2, 0x61, 0x12, 0xc6, 0x8f, 0x23,
	0x2f, 0x62, 0xbe, 0x17, 0x30, 0x7a, 0x24, 0x01, 0xa8, 0x3e, 0x75, 0x2e, 0xa6, 0xce, 0x91, 0x9f,
	0xb0, 0xfd, 0xbd, 0x90, 0xbb, 0xbf, 0xcf, 0x33, 0x44, 0x37, 0x9c, 0x4e, 0xc3, 0x40, 0x61, 0xed,
	0xef, 0xe5, 0x29, 0x84, 0xbe, 0xe7, 0xbe, 0xa5, 0xe7, 0xe9, 0xd4, 0x41, 0x6e, 0x2a, 0x66, 0x71,
	0xec, 0x85, 0x01, 0x99, 0x3a, 0x81, 0x73, 0xc1, 0x78, 0x8a, 0x71, 0x2f, 0x8f, 0x31, 0x3b, 0x8f,
	0x5d, 0xee, 0x9d, 0x33, 0x9e, 0x11, 0xd0, 0x7f, 0x5d, 0x80, 0x5b, 0x36, 0x4b, 0x66, 0x51, 0xd7,
	0x0f, 0xdf, 0xc4, 0x98, 0xbd, 0x9e, 0xb1, 0x38, 0x41, 0x5f, 0x42, 0x8d, 0xab, 0x61, 0xbc, 0x5b,
	0x38, 0x28, 0x1d, 0x36, 0x9e, 0x7c, 0x78, 0x34, 0x67, 0xf5, 0xc8, 0x70, 0x13, 0xef, 0xd2, 0x49,
	0x58, 0x7e, 0x09, 0x9e, 0x2f, 0x40, 0xb7, 0x61, 0x9d, 0x45, 0xa1, 0xfb, 0x6a, 0xb7, 0x78, 0x50,
	0x38, 0x2c, 0x63, 0xf5, 0x81, 0x5e, 0x40, 0xeb, 0xf5, 0x2c, 0x4c, 0x1c, 0x32, 0x8b, 0xa8, 0x93,
	0xb0, 0x78, 0xb7, 0x74, 0x50, 0x38, 0x6c, 0x3c, 0xf9, 0x9d, 0x1c, 0xdd, 0xb1, 0x9c, 0xb1, 0xe7,
	0x4c, 0xbe, 0x10, 0xf8, 0x76, 0xe2, 0x24, 0x2c, 0xdb, 0xa4, 0x29, 0x49, 0x28, 0xbc, 0x58, 0xff,
	0x6d, 0xd8, 0x92, 0xac, 0x77, 0xd8, 0xc4, 0x99, 0xf9, 0x49, 0xc6, 0xfc, 0x7c, 0xff, 0x42, 0x6e,
	0x7f, 0xfd, 0x3c, 0x3d, 0xe7, 0xd8, 0x3c, 0x75, 0xdc, 0x0c, 0xf5, 0xb3, 0x6b, 0xe7, 0xbc, 0x9b,
	0xe7, 0x47, 0xa0, 0x8a, 0x43, 0x7e, 0xcf, 0x33, 0xea, 0x17, 0x80, 0xe4, 0x1e, 0x43, 0xa9, 0xa4,
	0xff, 0x3f, 0x61, 0xea, 0x7f, 0x96, 0x1e, 0x46, 0x4a, 0x28, 0xdb, 0xe7, 0x9a, 0x84, 0x0b, 0x3f,
	0x56, 0xc2, 0xef, 0xd8, 0xfd, 0x2f, 0x0b, 0xa0, 0xe5, 0x6d, 0x26, 0x9e, 0xf9, 0x09, 0xfa, 0x02,
	0x2a, 0x5c, 0x8e, 0xe4, 0xb6, 0x1b, 0x4f, 0xf4, 0xdc, 0xb6, 0xcb, 0xc8, 0x47, 0xea, 0x07, 0xa7,
	0x2b, 0xf4, 0x67, 0x50, 0x49, 0xa9, 0x34, 0xa0, 0x6a, 0x8f, 0xdb, 0x6d, 0xd3, 0xb6, 0xb5, 0x35,
	0xf1, 0xd1, 0x35, 0xac, 0xde, 0x18, 0x9b, 0x5a, 0x01, 0x21, 0xd8, 0x18, 0x8c, 0x47, 0x1d, 0x63,
	0x64, 0x76, 0x88, 0x39, 0x1c, 0xb4, 0x4f, 0xb4, 0xa2, 0x7e, 0x09, 0xb7, 0x52, 0xbe, 0x07, 0xdc,
	0xbb, 0xf0, 0x82, 0xd1, 0xdb, 0x88, 0xa1, 0x2f, 0xa1, 0x9c, 0xbc, 0x8d, 0x58, 0xca, 0xc6, 0xa7,
	0x39, 0x36, 0xae, 0xe1, 0x1e, 0x5d, 0x0d, 0xb1, 0x5c, 0xa4, 0x7f, 0x0c, 0x90, 0x23, 0x55, 0x81,
	0xe2, 0xf1, 0x4b, 0x6d, 0x4d, 0xfe, 0x7e, 0xa3, 0x15, 0xc4, 0x6f, 0xff, 0xa9, 0x56, 0xd4, 0x7f,
	0x5d, 0x82, 0xdb, 0xab, 0xf4, 0x86, 0x1e, 0x42, 0x29, 0xf6, 0x68, 0x2a, 0xf8, 0x9d, 0xbc, 0x04,
	0xe6, 0x22, 0xb7, 0x3a, 0x58, 0xe0, 0xa0, 0x1d, 0xa8, 0x7a, 0x11, 0x71, 0x28, 0xe5, 0x52, 0xb8,
	0x75, 0x5c, 0xf1, 0x22, 0x83, 0x52, 0x8e, 0xf6, 0xa0, 0xc6, 0x67, 0x3e, 0x23, 0x1e, 0x15, 0x3e,
	0x52, 0x3a, 0xac, 0xe3, 0xaa, 0xf8, 0xb6, 0x68, 0x8c, 0xbe, 0x80, 0x16, 0x7d, 0x1b, 0x38, 0x53,
	0xcf, 0x25, 0x02, 0x14, 0xef, 0x96, 0xa5, 0x39, 0xdd, 0xc9, 0x6d, 0x94, 0x9a, 0xde, 0xcc, 0x67,
	0xb8, 0x99, 0xe2, 0x8a, 0x8f, 0x18, 0xb5, 0x61, 0x23, 0x35, 0x2a, 0x12, 0xca, 0x13, 0xee, 0xae,
	0x4b, 0x2e, 0x3f, 0x78, 0x9f, 0x80, 0x70, 0x8b, 0xe7, 0x41, 0xe8, 0x0f, 0xa1, 0xe6, 0x44, 0x01,
	0x71, 0xa6, 0xe7, 0x7c, 0xb7, 0x22, 0x97, 0x7f, 0x94, 0x37, 0xe5, 0x8b, 0x0b, 0xce, 0x2e, 0x9c,
	0x84, 0xd1, 0x53, 0xe7, 0x3b, 0x6f, 0x3a, 0x9b, 0x3e, 0xf7, 0x12, 0x2e, 0x6c, 0xab, 0xea, 0x44,
	0x81, 0x31, 0x3d, 0xe7, 0xe8, 0x2e, 0xd4, 0xbd, 0xe8, 0xf2, 0x99, 0x3a, 0x76, 0xf5, 0xa0, 0x70,
	0xd8, 0xc4, 0x35, 0x01, 0x90, 0x07, 0xdf, 0x86, 0xca, 0x34, 0xf6, 0x62, 0x1a, 0xec, 0xd6, 0xe4,
	0x4c, 0xfa, 0x85, 0x3e, 0x82, 0xd6, 0x2c, 0xf2, 0xbd, 0xe0, 0x5b, 0x92, 0xcc, 0x82, 0x80, 0xf9,
	0xbb, 0xf5, 0x83, 0xc2, 0x61, 0x0b, 0x37, 0x15, 0x70, 0x24, 0x61, 0xe8, 0x53, 0xd8, 0xa4, 0xe1,
	0x9b, 0x20, 0x8f, 0x06, 0x12, 0x6d, 0x23, 0x03, 0x2b, 0x44, 0xfd, 0x6f, 0x8a, 0xb0, 0xdd, 0x61,
	0xce, 0x8f, 0xd4, 0x5e, 0x5e, 0x49, 0xc5, 0x45, 0x25, 0x5d, 0x17, 0x74, 0xe9, 0x87, 0x0b, 0x3a,
	0x67, 0x1d, 0xe5, 0x05, 0xeb, 0x58, 0x90, 0xe0, 0xfa, 0x92, 0x04, 0x3f, 0x87, 0x3d, 0xce, 0xa6,
	0xe1, 0x25, 0x23, 0x54, 0x85, 0x44, 0x42, 0x79, 0x18, 0x91, 0x89, 0x38, 0xa4, 0xd4, 0x57, 0x0d,
	0x6f, 0x2b, 0x84, 0x34, 0x64, 0x76, 0x78, 0xa8, 0xfc, 0x52, 0xff, 0xdb, 0x02, 0xb4, 0x84, 0xa1,
	0x9c, 0x86, 0x34, 0x75, 0xc5, 0x1d, 0xa8, 0xa6, 0x47, 0x94, 0x12, 0xa9, 0xe3, 0x8a, 0x3a, 0x21,
	0xfa, 0x6c, 0xee, 0xe9, 0x45, 0xe9, 0x62, 0xf9, 0x68, 0xb6, 0x40, 0x62, 0xd9, 0xcd, 0x3f, 0x5b,
	0xed, 0xe6, 0x5b, 0xb0, 0x39, 0x34, 0xf0, 0xc8, 0x32, 0x7a, 0x24, 0x03, 0x16, 0xf2, 0xbe, 0x5f,
	0xd4, 0xff, 0xa1, 0x00, 0x5b, 0x4b, 0xfe, 0x26, 0xc9, 0x9c, 0xc0, 0x56, 0x9c, 0x38, 0x49, 0xea,
	0x0e, 0x44, 0x6d, 0x93, 0x05, 0xd9, 0xdd, 0x77, 0xb1, 0x85, 0x6f, 0xa9, 0x45, 0xd2, 0x49, 0xd4,
	0x12, 0xf4, 0x15, 0xdc, 0xce, 0x7b, 0xd6, 0x9c, 0x54, 0xf1, 0x06, 0x52, 0x28, 0xe7, 0x63, 0x29,
	0x2d, 0xfd, 0xaf, 0x0b, 0x70, 0xe7, 0x9a, 0x85, 0x49, 0x7e, 0x7f, 0xb1, 0x14, 0x23, 0xf3, 0xc1,
	0x69, 0xe5, 0x8a, 0x9f, 0x2a, 0x50, 0xfe, 0x77, 0x11, 0x1a, 0xb9, 0x44, 0x86, 0x1e, 0xc1, 0xfa,
	0xd4, 0x49, 0xd2, 0x14, 0xd9, 0x78, 0x72, 0x3b, 0xc7, 0x87, 0x40, 0x3b, 0x15, 0x73, 0x58, 0xa1,
	0x08, 0x53, 0x77, 0xa2, 0x88, 0x04, 0xce, 0x94, 0xa5, 0x91, 0xaa, 0xea, 0x44, 0x51, 0xdf, 0x99,
	0x32, 0x31, 0x75, 0xfe, 0x36, 0x61, 0x31, 0xe1, 0xdf, 0x49, 0x23, 0x2f, 0xe3, 0xaa, 0xfc, 0xc6,
	0xdf, 0xa1, 0x07, 0xd0, 0x8c, 0x19, 0xbf, 0xf4, 0x5c, 0x46, 0x64, 0x34, 0x56, 0x56, 0xdc, 0x48,
	0x61, 0x32, 0xba, 0xee, 0x40, 0x35, 0xe6, 0x2e, 0x99, 0x3a, 0xae, 0x34, 0xe4, 0x3a, 0xae, 0xc4,
	0xdc, 0x3d, 0x75, 0x5c, 0x31, 0x41, 0xe3, 0x44, 0x4e, 0x54, 0xd4, 0x04, 0x8d, 0x13, 0x31, 0xf1,
	0x0c, 0xd6, 0x85, 0xea, 0x98, 0x0c, 0x1d, 0x1b, 0x4f, 0x0e, 0x96, 0xd8, 0x4e, 0x4f, 0x27, 0xc7,
	0x2a, 0xa9, 0x29, 0x74, 0x3d, 0x84, 0xfa, 0x1c, 0x86, 0x34, 0x68, 0x76, 0x7b, 0x83, 0xaf, 0x49,
	0x1b, 0x9b, 0x42, 0x46, 0xda, 0x1a, 0xfa, 0x10, 0xee, 0x4a, 0x48, 0x66, 0x85, 0xed, 0x9e, 0x61,
	0xdb, 0x56, 0xd7, 0x6a, 0x1b, 0x23, 0x6b, 0xd0, 0xd7, 0x0a, 0xe8, 0x1e, 0xec, 0x49, 0x84, 0xae,
	0xd5, 0xbf, 0x3e, 0x5d, 0x9c, 0x53, 0x34, 0x5f, 0x0e, 0x2d, 0x6c, 0x76, 0xb4, 0x92, 0xfe, 0xe7,
	0xd0, 0x54, 0x0c, 0xc5, 0x51, 0x18, 0xc4, 0x0c, 0x3d, 0x5b, 0x52, 0xfc, 0xfd, 0x6b, 0x9c, 0x2b,
	0xc4, 0x9f, 0x4a, 0xdf, 0xff, 0x5a, 0x00, 0x6d, 0xb9, 0x7a, 0xf9, 0x81, 0xe1, 0x6d, 0xea, 0xb8,
	0xf9, 0xec, 0x54, 0x9d, 0x3a, 0xee, 0x52, 0x94, 0x2e, 0x29, 0xdd, 0xa4, 0x51, 0xfa, 0x3e, 0x34,
	0x9c, 0x88, 0xcc, 0x57, 0x29, 0x7d, 0xd7, 0x9d, 0xe8, 0x34, 0x5d, 0xb7, 0x03, 0x55, 0x27, 0xb5,
	0xa2, 0x54, 0xdb, 0x8e, 0x32, 0xa2, 0x8f, 0x61, 0x23, 0xa2, 0x11, 0x89, 0x13, 0x87, 0x27, 0x24,
	0xf1, 0xa6, 0x4c, 0x2a, 0xbd, 0x8c, 0x9b, 0x11, 0x8d, 0x6c, 0x01, 0x1c, 0x79, 0x53, 0xa6, 0xff,
	0x7b, 0x01, 0xee, 0x2c, 0xd5, 0x2d, 0xaa, 0x48, 0xf9, 0x89, 0x8e, 0xd5, 0x85, 0x86, 0x2a, 0x9b,
	0x94, 0xb9, 0x96, 0xa4, 0x9a, 0x3e, 0x59, 0x49, 0x2d, 0xb7, 0xf9, 0x91, 0x8c, 0xdd, 0xa0, 0x56,
	0x8a, 0xb1, 0xfe, 0x14, 0xca, 0xd2, 0xb8, 0x37, 0xa1, 0x71, 0x66, 0xf4, 0xac, 0x0e, 0x79, 0x31,
	0x1e, 0x8c, 0x0c, 0x6d, 0x0d, 0x35, 0xa1, 0xd6, 0x1f, 0xa4, 0x5f, 0x05, 0xd4, 0x82, 0xfa, 0xc8,
	0xc4, 0xa7, 0x56, 0xdf, 0x18, 0x89, 0x00, 0x47, 0xe0, 0xc1, 0x8d, 0xa5, 0x19, 0xfa, 0x02, 0xaa,
	0x57, 0x95, 0x9d, 0x08, 0x4b, 0x07, 0x37, 0xb1, 0x87, 0xb3, 0x05, 0x3a, 0x87, 0xcd, 0x91, 0x73,
	0xee, 0x33, 0x23, 0x8e, 0xbd, 0x8b, 0x60, 0xca, 0x82, 0x64, 0xc1, 0xaf, 0x0b, 0x8b, 0x7e, 0x7d,
	0x0f, 0x60, 0xea, 0x78, 0x01, 0x49, 0xc4, 0x92, 0xb4, 0xf6, 0xab, 0x0b, 0x88, 0xa4, 0x81, 0x3e,
	0x81, 0x8d, 0xd8, 0xe5, 0x22, 0x38, 0x28, 0x0c, 0x55, 0xa7, 0x94, 0x71, 0x2b, 0x85, 0x4a, 0xac,
	0x58, 0xff, 0x63, 0xd8, 0x32, 0x7c, 0x7f, 0x69, 0xdb, 0x18, 0x1d, 0xc3, 0x2d, 0xb9, 0x8a, 0x38,
	0x57, 0xc0, 0xf4, 0x40, 0xfb, 0xb9, 0x03, 0x2d, 0xad, 0xc3, 0x5a, 0xb2, 0x44, 0x48, 0xff, 0x52,
	0x94, 0xff, 0xdc, 0x73, 0x7c, 0xef, 0x4f, 0x19, 0xc5, 0x6f, 0x67, 0x43, 0xc7, 0xfd, 0x96, 0x25,
	0x48, 0x83, 0x52, 0xf4, 0xad, 0x72, 0xb4, 0x26, 0x16, 0x43, 0x84, 0xa0, 0xec, 0x4d, 0x63, 0x2f,
	0x55, 0xb9, 0x1c, 0xeb, 0x47, 0x70, 0x4b, 0xe1, 0x8b, 0x14, 0x28, 0xf7, 0xb2, 0xa4, 0x7d, 0x28,
	0xd6, 0x52, 0x7b, 0x5a, 0xc7, 0xd5, 0x44, 0x4d, 0xe9, 0xff, 0x5b, 0x80, 0x7a, 0x37, 0x9e, 0x12,
	0x19, 0x50, 0xd0, 0xcf, 0xb3, 0x40, 0xa4, 0xdc, 0xf9, 0x5e, 0xde, 0x9d, 0x33, 0x24, 0x31, 0x5a,
	0x88, 0x42, 0xff, 0x54, 0x80, 0x5a, 0x06, 0x13, 0x5e, 0x6b, 0x9b, 0xb6, 0x6d, 0x0d, 0xfa, 0xc4,
	0x68, 0x8f, 0xac, 0x33, 0x53, 0x5b, 0x43, 0xdb, 0x80, 0x32, 0xd8, 0xdc, 0x38, 0x3a, 0x5a, 0x19,
	0x3d, 0x80, 0x7b, 0xcb, 0x70, 0x31, 0xb6, 0xdb, 0x27, 0x66, 0x67, 0xdc, 0x33, 0x3b, 0xda, 0x3a,
	0xba, 0x0d, 0x5a, 0x86, 0x82, 0xcd, 0x9e, 0x69, 0xd8, 0x66, 0x47, 0xab, 0x08, 0x9b, 0x93, 0x51,
	0xce, 0xea, 0x1f, 0x6b, 0x55, 0x11, 0x35, 0xb2, 0x98, 0x57, 0x43, 0x00, 0x95, 0x74, 0xdf, 0xba,
	0x40, 0xb3, 0xfa, 0xe9, 0x17, 0x08, 0xb4, 0x94, 0x84, 0xd6, 0xd0, 0x3f, 0x07, 0x6d, 0x30, 0x4b,
	0x18, 0x3f, 0x61, 0x0e, 0xc5, 0xa2, 0x72, 0x70, 0x7c, 0xf4, 0x09, 0x6c, 0x86, 0xe4, 0x15, 0x25,
	0xa2, 0x92, 0x20, 0x94, 0xc5, 0x2e, 0x97, 0x62, 0x68, 0xe1, 0x66, 0x78, 0x22, 0x91, 0x3a, 0x02,
	0xa6, 0xff, 0x45, 0x01, 0xc0, 0xa6, 0x93, 0xae, 0xe7, 0x27, 0x8c, 0xc7, 0xe8, 0x21, 0x14, 0x27,
	0x99, 0x97, 0xee, 0x2d, 0x85, 0x3f, 0xb9, 0xc0, 0x8b, 0x92, 0x90, 0xe3, 0xe2, 0x84, 0x0a, 0x0d,
	0x26, 0x89, 0x2b, 0xd5, 0xd5, 0xc4, 0x62, 0x28, 0x20, 0x71, 0xe4, 0x49, 0xaf, 0x6c, 0x62, 0x31,
	0x44, 0x1b, 0x50, 0x9c, 0xf8, 0x32, 0xca, 0x34, 0x71, 0x71, 0xe2, 0xa3, 0x3b, 0x50, 0x89, 0xe9,
	0x44, 0x28, 0x6e, 0x5d, 0xf2, 0xb2, 0x1e, 0xd3, 0x89, 0x45, 0xf5, 0x3f, 0x81, 0x8d, 0xc5, 0x0d,
	0xd0, 0xcf, 0x16, 0x53, 0xdf, 0xce, 0xaa, 0xd4, 0xd7, 0x67, 0x6f, 0xb2, 0xec, 0xf7, 0x10, 0x2a,
	0x22, 0x2f, 0x87, 0x41, 0x5a, 0xec, 0xdc, 0x5a, 0x6a, 0xdd, 0xc2, 0x00, 0xa7, 0x08, 0xfa, 0xdf,
	0x17, 0x54, 0xd4, 0xcf, 0x48, 0x08, 0x73, 0xf2, 0xa2, 0xcb, 0xa7, 0x24, 0xe6, 0x6e, 0xe6, 0x61,
	0xe2, 0xdb, 0xe6, 0xee, 0x7c, 0x8a, 0xc6, 0x49, 0x16, 0x89, 0xc4, 0x77, 0x27, 0x4e, 0x44, 0xb9,
	0x2b, 0x5b, 0x73, 0x37, 0xf4, 0xaf, 0x62, 0x51, 0x1d, 0x37, 0x33, 0xa0, 0x0c, 0x2f, 0x7b, 0x50,
	0x13, 0x29, 0x32, 0x0a, 0x79, 0x22, 0x85, 0xd0, 0xc2, 0x22, 0x65, 0x0e, 0x43, 0x2e, 0xfd, 0x5a,
	0xa4, 0x55, 0x39, 0xa5, 0x64, 0x21, 0xd2, 0xac, 0x98, 0xd2, 0xff, 0xb9, 0x00, 0x4d, 0xcc, 0xa8,
	0xc7, 0x99, 0x9b, 0x58, 0xc1, 0x24, 0x44, 0x5f, 0x41, 0x93, 0x33, 0x2a, 0x02, 0x22, 0xc9, 0xf5,
	0x4c, 0x87, 0x0b, 0x95, 0xea, 0x15, 0xfa, 0xfc, 0x43, 0x44, 0x4c, 0x15, 0xf9, 0x38, 0xa3, 0x06,
	0xa5, 0x92, 0xa5, 0xdf, 0x82, 0x4d, 0x41, 0x4b, 0x64, 0x78, 0xc6, 0xf3, 0x31, 0xb6, 0xc5, 0x19,
	0xb5, 0x25, 0x54, 0xac, 0xd3, 0x8f, 0x41, 0x5b, 0xa6, 0x83, 0x6a, 0x50, 0xb6, 0x86, 0x67, 0x4f,
	0xb5, 0xb5, 0x74, 0xf4, 0x4c, 0x2b, 0xa0, 0x2a, 0x94, 0xc6, 0xb8, 0xa7, 0x15, 0x85, 0xa9, 0xda,
	0xd6, 0x70, 0x8c, 0x2d, 0xad, 0x24, 0xc6, 0x02, 0xf1, 0xec, 0x99, 0x56, 0xd6, 0x2f, 0x60, 0x6b,
	0x6e, 0x9b, 0x8c, 0xb7, 0x39, 0x73, 0x84, 0x1a, 0x84, 0x25, 0x84, 0x24, 0x61, 0xa9, 0x0b, 0xb7,
	0xf0, 0x7a, 0x38, 0x62, 0x1e, 0x45, 0x07, 0xd0, 0xbc, 0x08, 0xce, 0x89, 0x94, 0xba, 0x33, 0xe7,
	0x0d, 0x2e, 0x82, 0x73, 0x2b, 0xba, 0x7c, 0x6a, 0xa8, 0x0c, 0x25, 0x84, 0x46, 0x82, 0x50, 0x8a,
	0xbc, 0x85, 0x2b, 0xe2, 0xb3, 0x1f, 0xea, 0xff, 0x22, 0x1c, 0xf7, 0x0d, 0x1d, 0x3a, 0xdc, 0x99,
	0x8a, 0xd8, 0x48, 0x45, 0x6d, 0xef, 0x4d, 0x1c, 0x97, 0xa5, 0x5b, 0xd4, 0x05, 0xc4, 0x12, 0x00,
	0x51, 0xf7, 0x04, 0x2c, 0x21, 0x5e, 0x10, 0x27, 0x4e, 0xe0, 0x66, 0x15, 0x53, 0x23, 0x60, 0x89,
	0x95, 0x82, 0xd0, 0x1f, 0x80, 0x90, 0x88, 0x14, 0x00, 0xf1, 0x82, 0x49, 0x98, 0xf6, 0x07, 0x3b,
	0xef, 0x90, 0x3a, 0x6e, 0xf2, 0xbc, 0xca, 0x7e, 0x09, 0xcd, 0x70, 0x96, 0x70, 0xf2, 0x8a, 0x39,
	0x94, 0xb8, 0x2a, 0xd1, 0x36, 0x16, 0x0a, 0x8a, 0x15, 0x42, 0xc1, 0x20, 0xd6, 0x08, 0x58, 0x9b,
	0xeb, 0x0f, 0xa1, 0xd6, 0x99, 0x45, 0xdf, 0xe7, 0x34, 0x22, 0xea, 0x95, 0x86, 0x1d, 0x4b, 0xd8,
	0xa4, 0xb0, 0x29, 0x2f, 0x48, 0x18, 0xcf, 0x61, 0x36, 0x63, 0xee, 0x5a, 0x19, 0x4c, 0x48, 0xd8,
	0x0f, 0x5d, 0xc7, 0x27, 0x13, 0x25, 0xfe, 0xa2, 0xc4, 0x01, 0x09, 0xeb, 0x4a, 0x1d, 0x2c, 0x0b,
	0xa7, 0x74, 0x5d, 0x38, 0xfb, 0x50, 0x9f, 0x31, 0x22, 0x7b, 0x9f, 0xac, 0x88, 0xa8, 0xce, 0x98,
	0x15, 0x09, 0x05, 0xed, 0x42, 0x2d, 0xe1, 0x84, 0x45, 0x99, 0x97, 0x37, 0x71, 0x25, 0xe1, 0x66,
	0x64, 0x51, 0xf4, 0x0c, 0x1a, 0xc2, 0xfb, 0x27, 0x2a, 0xd6, 0xa4, 0xad, 0x69, 0xbe, 0x2d, 0xbe,
	0x0a, 0x44, 0x18, 0xe2, 0xab, 0xa0, 0x74, 0x07, 0x2a, 0x22, 0x07, 0x7a, 0x54, 0x56, 0x94, 0x75,
	0xbc, 0xee, 0x44, 0x91, 0x45, 0xf5, 0xff, 0x28, 0x41, 0xc3, 0x66, 0xc9, 0x31, 0x0f, 0x67, 0xd1,
	0xb0, 0x83, 0x05, 0x5a, 0x44, 0x39, 0xb9, 0x32, 0xa9, 0x88, 0x72, 0x8b, 0xa2, 0x0f, 0xa1, 0x21,
	0xc0, 0x97, 0x8c, 0xc7, 0x59, 0x80, 0x58, 0xc7, 0x10, 0x51, 0x7e, 0xa6, 0x20, 0xe8, 0x3e, 0x40,
	0xc4, 0x99, 0xcb, 0x28, 0xcb, 0x4e, 0xdb, 0xc2, 0x39, 0x08, 0xfa, 0x5d, 0xa8, 0x0b, 0x02, 0x2a,
	0x95, 0x94, 0xa5, 0xef, 0x6d, 0xe5, 0x7b, 0x79, 0xca, 0x55, 0x02, 0xa9, 0x45, 0xe9, 0x08, 0x1d,
	0x40, 0x29, 0xa2, 0x5e, 0xda, 0xba, 0x6f, 0xe4, 0x71, 0x3b, 0x16, 0x16, 0x53, 0xe8, 0x01, 0xb4,
	0x42, 0xf2, 0xea, 0x2a, 0x38, 0x4b, 0x61, 0xb4, 0x30, 0x84, 0x27, 0x59, 0x68, 0x46, 0x87, 0xa0,
	0xc9, 0x5e, 0x83, 0x91, 0x48, 0x78, 0xac, 0x68, 0x78, 0xd2, 0xf3, 0x6f, 0x28, 0xf8, 0x90, 0x33,
	0x2a, 0x3a, 0x1a, 0xf4, 0x14, 0x20, 0x66, 0x09, 0xb9, 0xe0, 0x64, 0xe2, 0x70, 0xd9, 0x96, 0x37,
	0x9e, 0x6c, 0x2f, 0x5e, 0xec, 0x48, 0x21, 0x75, 0x0d, 0x8c, 0x6b, 0xb1, 0xf8, 0xe8, 0x3a, 0x1c,
	0xbd, 0x80, 0x2d, 0x3a, 0xef, 0x66, 0x64, 0xf7, 0x49, 0x38, 0x7b, 0x2d, 0xdb, 0xf6, 0xc6, 0x93,
	0x07, 0xef, 0xeb, 0x79, 0xd4, 0x1d, 0xd4, 0x2d, 0xba, 0x00, 0xc7, 0xec, 0x35, 0xfa, 0x15, 0xdc,
	0xba, 0x4e, 0x10, 0x24, 0xc1, 0x1b, 0x2f, 0xd3, 0x36, 0x97, 0x88, 0xe9, 0xff, 0x58, 0xb8, 0x52,
	0x6f, 0xd7, 0xc0, 0xe8, 0x97, 0xb0, 0x35, 0x71, 0x38, 0x51, 0x61, 0x9c, 0x24, 0x21, 0x71, 0xa2,
	0xc8, 0x7f, 0x2b, 0x7b, 0xbf, 0x95, 0x01, 0x5f, 0x9b, 0x38, 0x5c, 0x0d, 0x47, 0xa1, 0x21, 0x50,
	0xd1, 0x11, 0xd4, 0x26, 0x6f, 0x28, 0x89, 0x1c, 0x3e, 0x4d, 0xbd, 0x39, 0xaf, 0xc7, 0x2c, 0x76,
	0xe0, 0xea, 0x44, 0x8e, 0xa6, 0x02, 0x9f, 0xce, 0x04, 0xba, 0x33, 0x4d, 0x1d, 0x38, 0x8f, 0x9f,
	0x79, 0x27, 0xae, 0xd2, 0x99, 0x1c, 0xe8, 0x7f, 0x55, 0x04, 0xb0, 0xd5, 0xf5, 0xae, 0xcd, 0x64,
	0x8a, 0xb8, 0xba, 0xca, 0xbd, 0x6a, 0xd0, 0x9b, 0x57, 0x40, 0x8b, 0x7e, 0x0f, 0x77, 0xfc, 0x14,
	0x36, 0xb3, 0x3b, 0xe3, 0xcc, 0x86, 0x95, 0x8d, 0x6e, 0xa4, 0xe0, 0xcc, 0x8e, 0x1f, 0x41, 0x35,
	0x08, 0xa9, 0x2c, 0x8b, 0x14, 0xb7, 0x79, 0xa1, 0xf4, 0x43, 0xca, 0xac, 0x0e, 0xae, 0x08, 0x0c,
	0x8b, 0x8a, 0xd6, 0x52, 0xd9, 0xf3, 0xfa, 0xf5, 0xd6, 0x32, 0x2b, 0x8d, 0xd2, 0x8a, 0x28, 0x67,
	0x5e, 0x11, 0xe5, 0xbb, 0x15, 0x59, 0x03, 0xae, 0x32, 0xaf, 0x61, 0x27, 0x33, 0xaf, 0x21, 0xe5,
	0xfa, 0x7f, 0x16, 0x60, 0x7b, 0x3c, 0xec, 0xa6, 0xf2, 0x68, 0x87, 0x41, 0xc2, 0xbe, 0x4b, 0x94,
	0x7b, 0xfc, 0x1e, 0x80, 0xeb, 0xcc, 0x62, 0xa6, 0xe2, 0xaa, 0xca, 0xf0, 0x28, 0x47, 0xb0, 0x2d,
	0x26, 0x2d, 0x13, 0xd7, 0x25, 0x96, 0x8c, 0xa7, 0x26, 0x68, 0x99, 0x10, 0xe2, 0xc0, 0x89, 0xe2,
	0x57, 0xa1, 0xca, 0xc8, 0x8b, 0xd5, 0xe8, 0xd5, 0x7e, 0xca, 0x23, 0x33, 0xc1, 0xd9, 0xe9, 0x12,
	0x64, 0xc1, 0xe6, 0xc4, 0xf1, 0xfc, 0x19, 0x67, 0x24, 0xbb, 0x35, 0x29, 0x5d, 0xb3, 0xf7, 0xae,
	0xc2, 0x10, 0xae, 0x25, 0xf6, 0xe6, 0x53, 0x15, 0x9c, 0x5b, 0x93, 0x1c, 0x9c, 0xea, 0x7f, 0x57,
	0x86, 0x6a, 0xca, 0x28, 0xfa, 0x1c, 0x6a, 0xe9, 0x81, 0xd8, 0x8a, 0xd6, 0x31, 0xc5, 0x52, 0xbf,
	0x67, 0x8e, 0x3f, 0x63, 0x31, 0xae, 0xaa, 0xa3, 0x31, 0xfd, 0xdf, 0x4a, 0xd0, 0xc8, 0x4d, 0x88,
	0x2a, 0x0f, 0x9b, 0xb6, 0x89, 0xcf, 0x64, 0xcf, 0x7b, 0x1b, 0x34, 0x6c, 0xbe, 0x18, 0x9b, 0xf6,
	0x88, 0x18, 0xed, 0xb6, 0x39, 0x14, 0x55, 0x61, 0x01, 0xdd, 0x87, 0xfd, 0x0c, 0x8a, 0xcd, 0xaf,
	0xcc, 0xb6, 0xe8, 0x29, 0xfb, 0x03, 0x82, 0x4d, 0xc3, 0x96, 0x9d, 0xee, 0x3d, 0xd8, 0xcb, 0xca,
	0xcc, 0xf6, 0xa0, 0x3f, 0x32, 0x5f, 0x8e, 0x48, 0x7f, 0x30, 0x22, 0xdd, 0xc1, 0xb8, 0xdf, 0xd1,
	0x4a, 0x68, 0x17, 0x6e, 0x9f, 0x1a, 0xfd, 0x8e, 0x31, 0x1a, 0xe0, 0x6f, 0x88, 0x65, 0x92, 0x53,
	0xcb, 0xb6, 0x45, 0xed, 0x59, 0x46, 0xfb, 0xb0, 0xdd, 0x1e, 0xf4, 0x3b, 0x96, 0x28, 0x5c, 0x8d,
	0x5e, 0x7e, 0x6e, 0x5d, 0x94, 0xc2, 0x56, 0x5f, 0x35, 0x4b, 0x3d, 0xb3, 0x7f, 0x3c, 0x3a, 0xd1,
	0x2a, 0x02, 0x7f, 0x81, 0x92, 0xd5, 0x6f, 0x0f, 0x30, 0x36, 0xdb, 0x23, 0xad, 0x2a, 0x98, 0xc8,
	0xf0, 0xbb, 0x03, 0xfc, 0xb5, 0x81, 0x3b, 0x56, 0xff, 0x98, 0x0c, 0x07, 0x3d, 0xab, 0xfd, 0x8d,
	0x56, 0x43, 0x1f, 0xc3, 0xc1, 0x7c, 0x9a, 0x8c, 0x4c, 0xab, 0x43, 0x8c, 0x5e, 0x6f, 0xa0, 0x9a,
	0x75, 0x32, 0x18, 0xca, 0x9e, 0xbd, 0x8e, 0x3e, 0x82, 0x0f, 0xfb, 0x03, 0x62, 0xda, 0x23, 0xe3,
	0x79, 0xcf, 0xb2, 0x4f, 0xcc, 0x0e, 0x19, 0x76, 0xdb, 0x43, 0x62, 0xd8, 0xf6, 0xa0, 0x6d, 0xa9,
	0xc6, 0x1e, 0xd0, 0x43, 0xf8, 0x04, 0x8f, 0x7b, 0xa6, 0xba, 0x2a, 0x90, 0xcb, 0x31, 0x39, 0x1d,
	0x74, 0xe6, 0xbd, 0x3f, 0xc9, 0xba, 0xf0, 0x06, 0xfa, 0x00, 0x76, 0x25, 0x01, 0xb3, 0x3f, 0x12,
	0x1c, 0x4b, 0xf9, 0x1c, 0x9b, 0xb6, 0x24, 0xd4, 0x14, 0xc7, 0x91, 0x62, 0xb4, 0x07, 0x63, 0xdc,
	0x36, 0x6d, 0x62, 0x9c, 0x19, 0x56, 0xcf, 0x78, 0xde, 0x33, 0xb5, 0x16, 0xda, 0x83, 0x3b, 0x42,
	0x2b, 0x56, 0xdb, 0x94, 0xb2, 0xb4, 0xc7, 0xc3, 0xe1, 0x00, 0x0b, 0x75, 0x6c, 0xc8, 0x26, 0xe1,
	0x1b, 0x7b, 0x64, 0x9e, 0xce, 0x37, 0xda, 0xd4, 0x9f, 0xc3, 0xf6, 0x6a, 0x33, 0x42, 0x87, 0x22,
	0x37, 0xf0, 0xb4, 0x95, 0xca, 0xbb, 0xd1, 0x60, 0x32, 0x61, 0x01, 0xf5, 0x82, 0x0b, 0xcb, 0x14,
	0x39, 0x82, 0xeb, 0xff, 0x55, 0x80, 0x46, 0x0e, 0x28, 0xf2, 0x94, 0x47, 0x59, 0x90, 0x78, 0x13,
	0x8f, 0x65, 0xc5, 0x7c, 0x0e, 0x82, 0x76, 0xa1, 0x9a, 0x4f, 0x72, 0x2d, 0x9c, 0x7d, 0xa2, 0xaf,
	0x61, 0xf7, 0x75, 0x18, 0x13, 0x26, 0xd8, 0x70, 0xd9, 0xe2, 0xdd, 0x59, 0xe9, 0x5a, 0x65, 0xb2,
	0xe2, 0x0e, 0x0f, 0xdf, 0x79, 0x1d, 0xc6, 0xa6, 0x5a, 0x9e, 0xbf, 0x90, 0x3b, 0x81, 0x4d, 0xca,
	0x7c, 0xf2, 0x9a, 0xf1, 0x39, 0x3d, 0x15, 0x7a, 0x0e, 0x6e, 0xba, 0x33, 0xc3, 0x2d, 0xca, 0xfc,
	0x17, 0x8c, 0xa7, 0x94, 0x1e, 0x7d, 0x01, 0x15, 0x15, 0xac, 0x45, 0x6d, 0xd9, 0xc1, 0x83, 0xa1,
	0xaa, 0x32, 0x85, 0xe9, 0x68, 0x05, 0x31, 0x7a, 0x3e, 0xee, 0x76, 0xb5, 0xa2, 0x18, 0xf5, 0x07,
	0xed, 0xa1, 0x56, 0x92, 0x78, 0xe3, 0x61, 0x4f, 0x2b, 0x3f, 0xfa, 0x0c, 0xb6, 0xec, 0x70, 0xc6,
	0x5d, 0x36, 0xaf, 0x72, 0x64, 0xb9, 0x2a, 0x9b, 0xa7, 0xf4, 0x2e, 0xa6, 0x06, 0xe5, 0xf6, 0x40,
	0x5e, 0xc4, 0x88, 0x3a, 0xf5, 0xd8, 0xeb, 0x19, 0x7d, 0xad, 0xf8, 0xe8, 0x67, 0x50, 0xcb, 0xb2,
	0xb7, 0x68, 0xa8, 0xac, 0xbe, 0x3d, 0x32, 0x7a, 0x3d, 0x6d, 0x4d, 0x20, 0x61, 0xf3, 0x74, 0x70,
	0x66, 0xaa, 0xbd, 0xad, 0x4e, 0xcf, 0xd4, 0x8a, 0x4f, 0xfe, 0xa7, 0x0e, 0xf5, 0x61, 0xf6, 0x36,
	0x88, 0x5e, 0xc2, 0x4e, 0xfe, 0x5d, 0x4b, 0x44, 0x38, 0x1e, 0xfa, 0xbe, 0x28, 0x58, 0xee, 0x2f,
	0xbf, 0xaa, 0x2c, 0xbe, 0x7d, 0xed, 0xdf, 0x7d, 0xcf, 0xab, 0x8b, 0xbe, 0x86, 0x7a, 0xb0, 0x61,
	0xb3, 0xc4, 0x3e, 0xcd, 0x82, 0x59, 0x8c, 0x16, 0x8a, 0xa4, 0x79, 0x86, 0xd9, 0x7f, 0xb0, 0x32,
	0xf6, 0xe5, 0x63, 0xad, 0xbe, 0x86, 0x86, 0xe9, 0x33, 0x90, 0x7a, 0x73, 0x90, 0x3b, 0xa1, 0x7b,
	0xcb, 0x0c, 0x2c, 0xbc, 0x85, 0xdd, 0xc4, 0x1f, 0x86, 0xd6, 0x82, 0x8d, 0xa0, 0x9b, 0x92, 0xfb,
	0xfe, 0x0d, 0xe6, 0xa5, 0xaf, 0xa1, 0x97, 0xb0, 0xb9, 0x64, 0x27, 0xe8, 0xe6, 0x1a, 0x64, 0xff,
	0x46, 0x33, 0xd3, 0xd7, 0x90, 0x01, 0x1b, 0xc7, 0x2c, 0x51, 0x07, 0x1c, 0xc7, 0xce, 0x05, 0x43,
	0x59, 0x5e, 0x94, 0x6f, 0xb9, 0x47, 0x67, 0xa1, 0x47, 0xf7, 0xf7, 0x97, 0xee, 0x8e, 0x31, 0x73,
	0x43, 0x4e, 0xe5, 0x8d, 0x83, 0xbe, 0x86, 0x7e, 0x01, 0x20, 0x6b, 0x74, 0x49, 0x19, 0x6d, 0xaf,
	0xbe, 0xd0, 0xdc, 0xdf, 0x79, 0xc7, 0x75, 0xa1, 0x22, 0x20, 0xfb, 0xf2, 0xdf, 0x98, 0x40, 0x07,
	0x36, 0xd5, 0x65, 0x51, 0x76, 0x43, 0x1a, 0xff, 0x26, 0x54, 0xfa, 0xb0, 0x79, 0xf5, 0x20, 0xa9,
	0x84, 0xfc, 0xc1, 0xb2, 0xaa, 0xf3, 0x8f, 0x95, 0x37, 0x19, 0x02, 0x83, 0xfd, 0x77, 0x5f, 0x88,
	0xa1, 0x1f, 0xf4, 0xa4, 0xf9, 0x7d, 0xd8, 0x9e, 0xdf, 0x95, 0xae, 0x60, 0x3b, 0xff, 0x60, 0x7c,
	0x13, 0xdb, 0x5d, 0x68, 0x1a, 0x94, 0xce, 0xa9, 0xa1, 0xf7, 0xbd, 0x26, 0xbf, 0x8f, 0x2f, 0x4b,
	0xd8, 0xac, 0xcf, 0x12, 0xf6, 0x93, 0x90, 0x52, 0x22, 0xb2, 0x86, 0x5d, 0xeb, 0xe5, 0x8f, 0x22,
	0xf5, 0x2b, 0xd8, 0x3e, 0x66, 0xc9, 0xaa, 0x3b, 0xbd, 0x15, 0x76, 0xbf, 0xe0, 0x98, 0xd7, 0x97,
	0x3c, 0xbf, 0xfb, 0x47, 0x7b, 0x12, 0xe1, 0xb1, 0x9f, 0xb0, 0xc7, 0xae, 0x1f, 0xce, 0xe8, 0xe3,
	0x8b, 0x30, 0xfd, 0xa3, 0xc2, 0x79, 0x45, 0xfe, 0xfe, 0xfc, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x50, 0xed, 0xe5, 0x80, 0x3c, 0x21, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PipelinedClient is the client API for Pipelined service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PipelinedClient interface {
	// Setup pipelined basic controllers
	SetupDefaultControllers(ctx context.Context, in *SetupDefaultRequest, opts ...grpc.CallOption) (*SetupFlowsResult, error)
	SetSMFSessions(ctx context.Context, in *SessionSet, opts ...grpc.CallOption) (*UPFSessionContextState, error)
	// Setup flows for subscribers (used on restarts)
	SetupPolicyFlows(ctx context.Context, in *SetupPolicyRequest, opts ...grpc.CallOption) (*SetupFlowsResult, error)
	// Activate flows for a subscriber based on predefined flow templates
	ActivateFlows(ctx context.Context, in *ActivateFlowsRequest, opts ...grpc.CallOption) (*ActivateFlowsResult, error)
	// Deactivate flows for a subscriber
	DeactivateFlows(ctx context.Context, in *DeactivateFlowsRequest, opts ...grpc.CallOption) (*DeactivateFlowsResult, error)
	// Get policy usage stats
	GetPolicyUsage(ctx context.Context, in *protos.Void, opts ...grpc.CallOption) (*RuleRecordTable, error)
	// Add new dpi flow
	CreateFlow(ctx context.Context, in *FlowRequest, opts ...grpc.CallOption) (*FlowResponse, error)
	// Remove dpi flow
	RemoveFlow(ctx context.Context, in *FlowRequest, opts ...grpc.CallOption) (*FlowResponse, error)
	// Update flow stats
	UpdateFlowStats(ctx context.Context, in *FlowRequest, opts ...grpc.CallOption) (*FlowResponse, error)
	// Setup subscribers flows (used on restarts)
	SetupQuotaFlows(ctx context.Context, in *SetupQuotaRequest, opts ...grpc.CallOption) (*SetupFlowsResult, error)
	// Synchronize subscribers quota check flows
	UpdateSubscriberQuotaState(ctx context.Context, in *UpdateSubscriberQuotaStateRequest, opts ...grpc.CallOption) (*FlowResponse, error)
	// Setup subscribers flows (used on restarts)
	SetupUEMacFlows(ctx context.Context, in *SetupUEMacRequest, opts ...grpc.CallOption) (*SetupFlowsResult, error)
	// Add a flow for a subscriber by matching the provided UE MAC address
	AddUEMacFlow(ctx context.Context, in *UEMacFlowRequest, opts ...grpc.CallOption) (*FlowResponse, error)
	// Delete a flow for a subscriber by matching the provided UE MAC address
	DeleteUEMacFlow(ctx context.Context, in *UEMacFlowRequest, opts ...grpc.CallOption) (*FlowResponse, error)
	// Update subscriber IPFIX flows
	UpdateIPFIXFlow(ctx context.Context, in *UEMacFlowRequest, opts ...grpc.CallOption) (*FlowResponse, error)
	// Get the flow table assignment for all apps ordered by main table number
	// and name
	GetAllTableAssignments(ctx context.Context, in *protos.Void, opts ...grpc.CallOption) (*AllTableAssignments, error)
}

type pipelinedClient struct {
	cc grpc.ClientConnInterface
}

func NewPipelinedClient(cc grpc.ClientConnInterface) PipelinedClient {
	return &pipelinedClient{cc}
}

func (c *pipelinedClient) SetupDefaultControllers(ctx context.Context, in *SetupDefaultRequest, opts ...grpc.CallOption) (*SetupFlowsResult, error) {
	out := new(SetupFlowsResult)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/SetupDefaultControllers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) SetSMFSessions(ctx context.Context, in *SessionSet, opts ...grpc.CallOption) (*UPFSessionContextState, error) {
	out := new(UPFSessionContextState)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/SetSMFSessions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) SetupPolicyFlows(ctx context.Context, in *SetupPolicyRequest, opts ...grpc.CallOption) (*SetupFlowsResult, error) {
	out := new(SetupFlowsResult)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/SetupPolicyFlows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) ActivateFlows(ctx context.Context, in *ActivateFlowsRequest, opts ...grpc.CallOption) (*ActivateFlowsResult, error) {
	out := new(ActivateFlowsResult)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/ActivateFlows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) DeactivateFlows(ctx context.Context, in *DeactivateFlowsRequest, opts ...grpc.CallOption) (*DeactivateFlowsResult, error) {
	out := new(DeactivateFlowsResult)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/DeactivateFlows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) GetPolicyUsage(ctx context.Context, in *protos.Void, opts ...grpc.CallOption) (*RuleRecordTable, error) {
	out := new(RuleRecordTable)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/GetPolicyUsage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) CreateFlow(ctx context.Context, in *FlowRequest, opts ...grpc.CallOption) (*FlowResponse, error) {
	out := new(FlowResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/CreateFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) RemoveFlow(ctx context.Context, in *FlowRequest, opts ...grpc.CallOption) (*FlowResponse, error) {
	out := new(FlowResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/RemoveFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) UpdateFlowStats(ctx context.Context, in *FlowRequest, opts ...grpc.CallOption) (*FlowResponse, error) {
	out := new(FlowResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/UpdateFlowStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) SetupQuotaFlows(ctx context.Context, in *SetupQuotaRequest, opts ...grpc.CallOption) (*SetupFlowsResult, error) {
	out := new(SetupFlowsResult)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/SetupQuotaFlows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) UpdateSubscriberQuotaState(ctx context.Context, in *UpdateSubscriberQuotaStateRequest, opts ...grpc.CallOption) (*FlowResponse, error) {
	out := new(FlowResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/UpdateSubscriberQuotaState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) SetupUEMacFlows(ctx context.Context, in *SetupUEMacRequest, opts ...grpc.CallOption) (*SetupFlowsResult, error) {
	out := new(SetupFlowsResult)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/SetupUEMacFlows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) AddUEMacFlow(ctx context.Context, in *UEMacFlowRequest, opts ...grpc.CallOption) (*FlowResponse, error) {
	out := new(FlowResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/AddUEMacFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) DeleteUEMacFlow(ctx context.Context, in *UEMacFlowRequest, opts ...grpc.CallOption) (*FlowResponse, error) {
	out := new(FlowResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/DeleteUEMacFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) UpdateIPFIXFlow(ctx context.Context, in *UEMacFlowRequest, opts ...grpc.CallOption) (*FlowResponse, error) {
	out := new(FlowResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/UpdateIPFIXFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) GetAllTableAssignments(ctx context.Context, in *protos.Void, opts ...grpc.CallOption) (*AllTableAssignments, error) {
	out := new(AllTableAssignments)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/GetAllTableAssignments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PipelinedServer is the server API for Pipelined service.
type PipelinedServer interface {
	// Setup pipelined basic controllers
	SetupDefaultControllers(context.Context, *SetupDefaultRequest) (*SetupFlowsResult, error)
	SetSMFSessions(context.Context, *SessionSet) (*UPFSessionContextState, error)
	// Setup flows for subscribers (used on restarts)
	SetupPolicyFlows(context.Context, *SetupPolicyRequest) (*SetupFlowsResult, error)
	// Activate flows for a subscriber based on predefined flow templates
	ActivateFlows(context.Context, *ActivateFlowsRequest) (*ActivateFlowsResult, error)
	// Deactivate flows for a subscriber
	DeactivateFlows(context.Context, *DeactivateFlowsRequest) (*DeactivateFlowsResult, error)
	// Get policy usage stats
	GetPolicyUsage(context.Context, *protos.Void) (*RuleRecordTable, error)
	// Add new dpi flow
	CreateFlow(context.Context, *FlowRequest) (*FlowResponse, error)
	// Remove dpi flow
	RemoveFlow(context.Context, *FlowRequest) (*FlowResponse, error)
	// Update flow stats
	UpdateFlowStats(context.Context, *FlowRequest) (*FlowResponse, error)
	// Setup subscribers flows (used on restarts)
	SetupQuotaFlows(context.Context, *SetupQuotaRequest) (*SetupFlowsResult, error)
	// Synchronize subscribers quota check flows
	UpdateSubscriberQuotaState(context.Context, *UpdateSubscriberQuotaStateRequest) (*FlowResponse, error)
	// Setup subscribers flows (used on restarts)
	SetupUEMacFlows(context.Context, *SetupUEMacRequest) (*SetupFlowsResult, error)
	// Add a flow for a subscriber by matching the provided UE MAC address
	AddUEMacFlow(context.Context, *UEMacFlowRequest) (*FlowResponse, error)
	// Delete a flow for a subscriber by matching the provided UE MAC address
	DeleteUEMacFlow(context.Context, *UEMacFlowRequest) (*FlowResponse, error)
	// Update subscriber IPFIX flows
	UpdateIPFIXFlow(context.Context, *UEMacFlowRequest) (*FlowResponse, error)
	// Get the flow table assignment for all apps ordered by main table number
	// and name
	GetAllTableAssignments(context.Context, *protos.Void) (*AllTableAssignments, error)
}

// UnimplementedPipelinedServer can be embedded to have forward compatible implementations.
type UnimplementedPipelinedServer struct {
}

func (*UnimplementedPipelinedServer) SetupDefaultControllers(ctx context.Context, req *SetupDefaultRequest) (*SetupFlowsResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupDefaultControllers not implemented")
}
func (*UnimplementedPipelinedServer) SetSMFSessions(ctx context.Context, req *SessionSet) (*UPFSessionContextState, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSMFSessions not implemented")
}
func (*UnimplementedPipelinedServer) SetupPolicyFlows(ctx context.Context, req *SetupPolicyRequest) (*SetupFlowsResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupPolicyFlows not implemented")
}
func (*UnimplementedPipelinedServer) ActivateFlows(ctx context.Context, req *ActivateFlowsRequest) (*ActivateFlowsResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivateFlows not implemented")
}
func (*UnimplementedPipelinedServer) DeactivateFlows(ctx context.Context, req *DeactivateFlowsRequest) (*DeactivateFlowsResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeactivateFlows not implemented")
}
func (*UnimplementedPipelinedServer) GetPolicyUsage(ctx context.Context, req *protos.Void) (*RuleRecordTable, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPolicyUsage not implemented")
}
func (*UnimplementedPipelinedServer) CreateFlow(ctx context.Context, req *FlowRequest) (*FlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFlow not implemented")
}
func (*UnimplementedPipelinedServer) RemoveFlow(ctx context.Context, req *FlowRequest) (*FlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFlow not implemented")
}
func (*UnimplementedPipelinedServer) UpdateFlowStats(ctx context.Context, req *FlowRequest) (*FlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFlowStats not implemented")
}
func (*UnimplementedPipelinedServer) SetupQuotaFlows(ctx context.Context, req *SetupQuotaRequest) (*SetupFlowsResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupQuotaFlows not implemented")
}
func (*UnimplementedPipelinedServer) UpdateSubscriberQuotaState(ctx context.Context, req *UpdateSubscriberQuotaStateRequest) (*FlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSubscriberQuotaState not implemented")
}
func (*UnimplementedPipelinedServer) SetupUEMacFlows(ctx context.Context, req *SetupUEMacRequest) (*SetupFlowsResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupUEMacFlows not implemented")
}
func (*UnimplementedPipelinedServer) AddUEMacFlow(ctx context.Context, req *UEMacFlowRequest) (*FlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUEMacFlow not implemented")
}
func (*UnimplementedPipelinedServer) DeleteUEMacFlow(ctx context.Context, req *UEMacFlowRequest) (*FlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUEMacFlow not implemented")
}
func (*UnimplementedPipelinedServer) UpdateIPFIXFlow(ctx context.Context, req *UEMacFlowRequest) (*FlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateIPFIXFlow not implemented")
}
func (*UnimplementedPipelinedServer) GetAllTableAssignments(ctx context.Context, req *protos.Void) (*AllTableAssignments, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllTableAssignments not implemented")
}

func RegisterPipelinedServer(s *grpc.Server, srv PipelinedServer) {
	s.RegisterService(&_Pipelined_serviceDesc, srv)
}

func _Pipelined_SetupDefaultControllers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetupDefaultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).SetupDefaultControllers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/SetupDefaultControllers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).SetupDefaultControllers(ctx, req.(*SetupDefaultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_SetSMFSessions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).SetSMFSessions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/SetSMFSessions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).SetSMFSessions(ctx, req.(*SessionSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_SetupPolicyFlows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetupPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).SetupPolicyFlows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/SetupPolicyFlows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).SetupPolicyFlows(ctx, req.(*SetupPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_ActivateFlows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateFlowsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).ActivateFlows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/ActivateFlows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).ActivateFlows(ctx, req.(*ActivateFlowsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_DeactivateFlows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeactivateFlowsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).DeactivateFlows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/DeactivateFlows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).DeactivateFlows(ctx, req.(*DeactivateFlowsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_GetPolicyUsage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protos.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).GetPolicyUsage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/GetPolicyUsage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).GetPolicyUsage(ctx, req.(*protos.Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_CreateFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).CreateFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/CreateFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).CreateFlow(ctx, req.(*FlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_RemoveFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).RemoveFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/RemoveFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).RemoveFlow(ctx, req.(*FlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_UpdateFlowStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).UpdateFlowStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/UpdateFlowStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).UpdateFlowStats(ctx, req.(*FlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_SetupQuotaFlows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetupQuotaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).SetupQuotaFlows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/SetupQuotaFlows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).SetupQuotaFlows(ctx, req.(*SetupQuotaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_UpdateSubscriberQuotaState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSubscriberQuotaStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).UpdateSubscriberQuotaState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/UpdateSubscriberQuotaState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).UpdateSubscriberQuotaState(ctx, req.(*UpdateSubscriberQuotaStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_SetupUEMacFlows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetupUEMacRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).SetupUEMacFlows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/SetupUEMacFlows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).SetupUEMacFlows(ctx, req.(*SetupUEMacRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_AddUEMacFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UEMacFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).AddUEMacFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/AddUEMacFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).AddUEMacFlow(ctx, req.(*UEMacFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_DeleteUEMacFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UEMacFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).DeleteUEMacFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/DeleteUEMacFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).DeleteUEMacFlow(ctx, req.(*UEMacFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_UpdateIPFIXFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UEMacFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).UpdateIPFIXFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/UpdateIPFIXFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).UpdateIPFIXFlow(ctx, req.(*UEMacFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_GetAllTableAssignments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protos.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).GetAllTableAssignments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/GetAllTableAssignments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).GetAllTableAssignments(ctx, req.(*protos.Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _Pipelined_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.lte.Pipelined",
	HandlerType: (*PipelinedServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetupDefaultControllers",
			Handler:    _Pipelined_SetupDefaultControllers_Handler,
		},
		{
			MethodName: "SetSMFSessions",
			Handler:    _Pipelined_SetSMFSessions_Handler,
		},
		{
			MethodName: "SetupPolicyFlows",
			Handler:    _Pipelined_SetupPolicyFlows_Handler,
		},
		{
			MethodName: "ActivateFlows",
			Handler:    _Pipelined_ActivateFlows_Handler,
		},
		{
			MethodName: "DeactivateFlows",
			Handler:    _Pipelined_DeactivateFlows_Handler,
		},
		{
			MethodName: "GetPolicyUsage",
			Handler:    _Pipelined_GetPolicyUsage_Handler,
		},
		{
			MethodName: "CreateFlow",
			Handler:    _Pipelined_CreateFlow_Handler,
		},
		{
			MethodName: "RemoveFlow",
			Handler:    _Pipelined_RemoveFlow_Handler,
		},
		{
			MethodName: "UpdateFlowStats",
			Handler:    _Pipelined_UpdateFlowStats_Handler,
		},
		{
			MethodName: "SetupQuotaFlows",
			Handler:    _Pipelined_SetupQuotaFlows_Handler,
		},
		{
			MethodName: "UpdateSubscriberQuotaState",
			Handler:    _Pipelined_UpdateSubscriberQuotaState_Handler,
		},
		{
			MethodName: "SetupUEMacFlows",
			Handler:    _Pipelined_SetupUEMacFlows_Handler,
		},
		{
			MethodName: "AddUEMacFlow",
			Handler:    _Pipelined_AddUEMacFlow_Handler,
		},
		{
			MethodName: "DeleteUEMacFlow",
			Handler:    _Pipelined_DeleteUEMacFlow_Handler,
		},
		{
			MethodName: "UpdateIPFIXFlow",
			Handler:    _Pipelined_UpdateIPFIXFlow_Handler,
		},
		{
			MethodName: "GetAllTableAssignments",
			Handler:    _Pipelined_GetAllTableAssignments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lte/protos/pipelined.proto",
}
